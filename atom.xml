<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>SAMZONG</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://samzong.me/"/>
  <updated>2020-11-24T05:21:03.000Z</updated>
  <id>https://samzong.me/</id>
  
  <author>
    <name>SAMZONG</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Check You Favorites App is readyOnapplesilicon</title>
    <link href="https://samzong.me/2020/11/24/Check-You-Favorites-App-Is-Ready-Apple-Silicon/"/>
    <id>https://samzong.me/2020/11/24/Check-You-Favorites-App-Is-Ready-Apple-Silicon/</id>
    <published>2020-11-23T16:32:13.000Z</published>
    <updated>2020-11-24T05:21:03.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-https-isapplesiliconready-com"><a href="#1-https-isapplesiliconready-com" class="headerlink" title="1. https://isapplesiliconready.com/"></a>1. <a href="https://isapplesiliconready.com/" target="_blank" rel="noopener">https://isapplesiliconready.com/</a></h2><p><img src="http://ipic-typora-samzong.oss-cn-qingdao.aliyuncs.com/ipic/2020-11-24-142803.png" alt="image-20201124222803150"></p><h4 id="If-you-have-any-apps-want-and-to-here-Please-click-REQUEST-AN-APP-or-use-this-link："><a href="#If-you-have-any-apps-want-and-to-here-Please-click-REQUEST-AN-APP-or-use-this-link：" class="headerlink" title="If you have any apps want and to here. Please click REQUEST AN APP  or use this link："></a>If you have any apps want and to here. Please click <code>REQUEST AN APP</code>  or use this link：</h4><blockquote><p><a href="https://isapplesiliconready.com/request/" target="_blank" rel="noopener">https://isapplesiliconready.com/request/</a></p></blockquote><hr><h2 id="2-https-doesitarm-com"><a href="#2-https-doesitarm-com" class="headerlink" title="2. https://doesitarm.com/"></a>2. <a href="https://doesitarm.com/" target="_blank" rel="noopener">https://doesitarm.com/</a></h2><p><img src="http://ipic-typora-samzong.oss-cn-qingdao.aliyuncs.com/ipic/2020-11-24-143231.png" alt></p><h4 id="If-you-want-watching-any-apps-change-Input-you-email-at-Tell-me-with-this-changes"><a href="#If-you-want-watching-any-apps-change-Input-you-email-at-Tell-me-with-this-changes" class="headerlink" title="If you want watching any apps change? Input  you email at  Tell me with this changes"></a>If you want watching any apps change? Input  you email at  <code>Tell me with this changes</code></h4><p><img src="http://ipic-typora-samzong.oss-cn-qingdao.aliyuncs.com/ipic/2020-11-24-143450.png" alt="image-20201124223449695"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-https-isapplesiliconready-com&quot;&gt;&lt;a href=&quot;#1-https-isapplesiliconready-com&quot; class=&quot;headerlink&quot; title=&quot;1. https://isapplesiliconready
      
    
    </summary>
    
      <category term="Mac" scheme="https://samzong.me/categories/Mac/"/>
    
    
      <category term="Mac" scheme="https://samzong.me/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>MySQL 命令行辅助 mycli</title>
    <link href="https://samzong.me/2019/07/03/sdertfvdsrt222/"/>
    <id>https://samzong.me/2019/07/03/sdertfvdsrt222/</id>
    <published>2019-07-03T05:17:04.000Z</published>
    <updated>2019-07-03T05:17:04.000Z</updated>
    
    <content type="html"><![CDATA[<h5 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h5><p>Mycli is tested on macOS and Linux. It runs on Python 2.7 and 3.4+.</p><blockquote><p>NOTE: Python 2.6 support was dropped in mycli 1.9.0. If you’re running Python 2.6, you’ll want to install mycli 1.8.1.</p></blockquote><p>######Python Package:</p><p>If you already know how to install python packages, then you can do:</p><ul><li>You might need sudo.</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">$ pip install mycli</span><br><span class="line">or</span><br><span class="line">$ easy_install mycli</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># Windows:</span></span><br><span class="line"><span class="hljs-comment"># Follow the instructions on this blogpost to install mycli on Windows:  https://www.codewall.co.uk/installing-using-mycli-on-windows/</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># macOS:</span></span><br><span class="line"><span class="hljs-comment">#The easiest way install mycli on a Mac is to use Homebrew.</span></span><br><span class="line">$ brew install mycli</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># Linux:</span></span><br><span class="line"><span class="hljs-comment"># Debian/Ubuntu Package:</span></span><br><span class="line"><span class="hljs-comment"># https://packages.debian.org/search?keywords=mycli</span></span><br><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get install mycli</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># Fedora</span></span><br><span class="line">$ sudo dnf install mycli</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># RHEL, Centos:</span></span><br><span class="line"><span class="hljs-comment"># We don't have packages for RHEL or Centos, yet. Instead, use pip to install mycli. You can install pip on your system using:</span></span><br><span class="line">$ sudo yum install python-pip python-devel</span><br><span class="line"><span class="hljs-comment"># Once that is installed, you can install mycli:</span></span><br><span class="line">$ sudo pip install mycli</span><br></pre></td></tr></table></figure><h5 id="Install-Error-QA"><a href="#Install-Error-QA" class="headerlink" title="Install Error QA."></a>Install Error QA.</h5><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Cannot uninstall <span class="hljs-string">'configobj'</span>. It is a distutils installed project and thus we cannot accurately determine <span class="hljs-built_in">which</span> files belong to it <span class="hljs-built_in">which</span> would lead to only a partial uninstall.</span><br></pre></td></tr></table></figure><h6 id="Fix-code"><a href="#Fix-code" class="headerlink" title="Fix code"></a>Fix code</h6><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install --ignore-installed mycli</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;Install&quot;&gt;&lt;a href=&quot;#Install&quot; class=&quot;headerlink&quot; title=&quot;Install&quot;&gt;&lt;/a&gt;Install&lt;/h5&gt;&lt;p&gt;Mycli is tested on macOS and Linux. It runs on Pyt
      
    
    </summary>
    
      <category term="MySQL" scheme="https://samzong.me/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="https://samzong.me/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Howto Install Redmine on Ubuntu 16.04</title>
    <link href="https://samzong.me/2017/12/26/Install_redmine3.4_rbuy2.4.1_passenger_nginx_mysql_ubuntu16.04/"/>
    <id>https://samzong.me/2017/12/26/Install_redmine3.4_rbuy2.4.1_passenger_nginx_mysql_ubuntu16.04/</id>
    <published>2017-12-26T07:50:45.000Z</published>
    <updated>2017-12-26T07:50:45.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight vala hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta"># base</span></span><br><span class="line">apt install mysql-server libmysqlclient-dev git-core subversion imagemagick libmagickwand-dev libcurl4-openssl-dev </span><br><span class="line">apt install build-essential mysql-server ruby ruby-dev libmysqlclient-dev imagemagick libmagickwand-dev</span><br><span class="line"><span class="hljs-meta"># install mysql</span></span><br><span class="line">systemctl enable mysql.service</span><br><span class="line">systemctl start mysql.service</span><br><span class="line">create database redmine character <span class="hljs-keyword">set</span> utf8;</span><br><span class="line">grant all privileges on redmine.* to redmine@<span class="hljs-string">'localhost'</span> identified by <span class="hljs-string">'redmine'</span>;</span><br><span class="line">flush privileges;</span><br><span class="line"><span class="hljs-meta"># Install ruby</span></span><br><span class="line">gpg --keyserver hkp:<span class="hljs-comment">//keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3</span></span><br><span class="line">curl -sSL https:<span class="hljs-comment">//get.rvm.io | bash -s stable</span></span><br><span class="line">source /etc/profile.d/rvm.sh</span><br><span class="line">rvm requirements</span><br><span class="line">rvm install <span class="hljs-number">2.4</span><span class="hljs-number">.1</span></span><br><span class="line">rvm use <span class="hljs-number">2.4</span><span class="hljs-number">.1</span> --<span class="hljs-keyword">default</span></span><br><span class="line"><span class="hljs-meta"># install passenger and nginx </span></span><br><span class="line">gem install passenger --no-ri --no-rdoc</span><br><span class="line">passenger-install-nginx-module</span><br><span class="line"><span class="hljs-meta"># 1. auto install nginx.</span></span><br><span class="line">curl https:<span class="hljs-comment">//raw.githubusercontent.com/makevoid/nginx-passenger-ubuntu/master/nginx/nginx.service &gt; /lib/systemd/system/nginx.service</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl enable nginx</span><br><span class="line">vim /opt/nginx/conf/nginx.conf # 注销 location / &#123;&#125; 的配置</span><br><span class="line">server &#123;</span><br><span class="line">  listen  <span class="hljs-number">80</span>;</span><br><span class="line">  server_name [your_server_domain_name] # redmine.com;</span><br><span class="line">  root /<span class="hljs-keyword">var</span>/data/redmine/<span class="hljs-keyword">public</span>;</span><br><span class="line">  passenger_enabled on;</span><br><span class="line">  client_max_body_size      <span class="hljs-number">10</span>m; # Max attachemnt size</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">systemctl start nginx</span><br><span class="line"><span class="hljs-meta"># install redmine</span></span><br><span class="line">mkdir /<span class="hljs-keyword">var</span>/data</span><br><span class="line">cd /<span class="hljs-keyword">var</span>/data</span><br><span class="line">svn co http:<span class="hljs-comment">//svn.redmine.org/redmine/branches/3.4-stable redmine</span></span><br><span class="line">cd /<span class="hljs-keyword">var</span>/data/redmine</span><br><span class="line">cp -pR /<span class="hljs-keyword">var</span>/data/redmine/config/database.yml.example /<span class="hljs-keyword">var</span>/data/redmine/config/database.yml</span><br><span class="line">vim config/database.yml  # <span class="hljs-keyword">set</span> redmine db user and password</span><br><span class="line"><span class="hljs-meta"># Install Plugins</span></span><br><span class="line">cd /<span class="hljs-keyword">var</span>/data/redmine</span><br><span class="line">gem install bundler --no-ri --no-rdoc</span><br><span class="line">bundle install</span><br><span class="line"><span class="hljs-meta"># configure redmine</span></span><br><span class="line">cd /<span class="hljs-keyword">var</span>/data/redmine</span><br><span class="line">mkdir <span class="hljs-keyword">public</span>/plugin_assets</span><br><span class="line">chown -R www-data:www-data files log tmp <span class="hljs-keyword">public</span>/plugin_assets config.ru</span><br><span class="line">chmod -R <span class="hljs-number">755</span> files log tmp <span class="hljs-keyword">public</span>/plugin_assets</span><br><span class="line"><span class="hljs-meta"># input database and base file.</span></span><br><span class="line">RAILS_ENV=production bundle exec rake db:migrate</span><br><span class="line">RAILS_ENV=production bundle exec rake redmine:load_default_data</span><br><span class="line">bundle exec rake generate_secret_token</span><br><span class="line"><span class="hljs-meta"># restart nginx, install ok.</span></span><br><span class="line">systemctl restart nginx</span><br><span class="line"><span class="hljs-meta"># restart redmine</span></span><br><span class="line">touch /<span class="hljs-keyword">var</span>/data/redmine/tmp/restart.txt</span><br><span class="line"><span class="hljs-meta"># configure email service</span></span><br><span class="line">vim /<span class="hljs-keyword">var</span>/data/redmine/config/configuration.yml</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight vala hljs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span c
      
    
    </summary>
    
    
      <category term="Redmine" scheme="https://samzong.me/tags/Redmine/"/>
    
  </entry>
  
  <entry>
    <title>iPhone/iPad 不越狱安装旧版程序</title>
    <link href="https://samzong.me/2017/11/17/iphone-ipad-install-oldversion-apps/"/>
    <id>https://samzong.me/2017/11/17/iphone-ipad-install-oldversion-apps/</id>
    <published>2017-11-17T06:03:23.000Z</published>
    <updated>2017-11-17T06:03:23.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>软件版本迭代是会带来新的功能和 BUG 修复，为给用户带来更好的使用体验，我也是乐于尝鲜的性格，所以在软件推出发布新版本时都会及时更新，但用户体验其实是一个玄学的话题，有时并不能给你带来更好的体验，在 iOS 上，由于苹果商店严格的管理机制导致我们在升级后，想要回退到之前版本变得十分困难。</p><p>虾米音乐升级到 6.0 版本之后，改变很大，作为一位老虾米非常不适应，所以就瞄准了 6.0 之前的最后一个版本：5.9.4。</p><p>解决办法是在 iTunes 下载程序时，使用抓包工具对与苹果应用商店服务器之间的请求进行分析，通过修改下载请求中程序版本识别序列号来下载旧版本。</p><h4 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h4><p>网上较多的解决办法是使用 Fiddler+iTunes 是在 Windows 平台，因为我只有 Mac ，所以用Charles 代替 Fiddler，这里需要注意的是iTunes的版本，在笔者写这篇教程的前一天 iTunes 更新到12.7，在 12.7 中有一个很大的变化移除了 App store ，所以请使用低于 12.7 版本的 iTunes 。</p><h5 id="Charles-安装"><a href="#Charles-安装" class="headerlink" title="Charles 安装"></a>Charles 安装</h5><p>对于 Charles 版本并没有特殊要求，我这边是通过brew安装，你也可以到 Charles 官网下载安装， Charles 是需要付费的软件，但是有30天免费使用期限，如果你有长期使用打算，建议购买正版授权。</p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/x4dkc.jpg" alt></p><h5 id="Charles-SSL证书导入系统"><a href="#Charles-SSL证书导入系统" class="headerlink" title="Charles SSL证书导入系统"></a>Charles SSL证书导入系统</h5><p>从 Charles 中导出证书文件</p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/v815e.jpg" alt></p><p>在 KeyChain Access 中导入证书</p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/883p7.jpg" alt></p><p>选中导入的证书，然后右键选择 ‘Get Info’ ，设置证书信任状态</p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/xoalz.jpg" alt></p><h4 id="“虾米音乐”-的三次下载"><a href="#“虾米音乐”-的三次下载" class="headerlink" title="“虾米音乐” 的三次下载"></a>“虾米音乐” 的三次下载</h4><h5 id="第一次下载"><a href="#第一次下载" class="headerlink" title="第一次下载"></a>第一次下载</h5><p>打开 Charles ，开启监听，然后使用搜索虾米音乐，点击 Downloads 按钮。</p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/6dt52.jpg" alt></p><p>点击下载后，在 Charles 会出现监听到信息，找到一条 ‘p[xx]-buy.itunes.apple.com’ ，其中 xx 是一个随机的数字，选中它，然后右键菜单栏中勾选 ‘Enable SSL Proxying’ 和 ‘Breakpoints’ 。设置完成后，在 iTunes 下载中，清理下载记录。</p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/ea85i.jpg" alt></p><h5 id="第二次下载"><a href="#第二次下载" class="headerlink" title="第二次下载"></a>第二次下载</h5><p>重新搜索虾米音乐，并点击下载按钮，这时 Charles 会弹出窗口，然后在弹出窗口的右下三个按钮中选择 ‘Execute’ ，这一步是我们请求服务器，紧接着出现的就是服务器给我们的响应，然后选择 ‘Edit Response’ - ‘XML Text’ ，然后向下滚动找到下图中的部分，这里是所有虾米音乐的版本的序列数字，但是这里没有办法直接看到版本号，越大的数字版本号越新。这里可以通过在手机 App store 中查看软件的版本记录，找到大概要回退多少个版本，然后数字从大到小找个半个序列数字记录下来，然后在下面三个按钮中选择 ‘Abort’ ，这时 iTunes 会弹出一个报错窗口，关掉即可。</p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/27nit.jpg" alt></p><h5 id="第三次下载"><a href="#第三次下载" class="headerlink" title="第三次下载"></a>第三次下载</h5><p>再次重新搜索虾米音乐，并点击下载，在这次Charles弹出窗口中我们需要直接修改 ‘Edit Requset’ - ‘XML Text’ ，将如下图中的 ‘appExtVrsid’ 对应的值修改为，我们上一步中记录的序列数字，然后就一直在每次弹出选择时，选择 ‘Execute’ ，直到下载完成记录。</p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/h7zzu.jpg" alt></p><h4 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h4><p>下载完成后，你的 iTunes App Library 中已经有了一个虾米音乐，连接上你的手机，将其安装到手机上即可，下图是我安装后的版本截图。</p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/ppy2m.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;p&gt;软件版本迭代是会带来新的功能和 BUG 修复，为给用户带来更好的使用体验，我也是乐于尝鲜的性格，所以在软件推出发布新版本时都会及时更新，但用
      
    
    </summary>
    
      <category term="iOS" scheme="https://samzong.me/categories/iOS/"/>
    
    
      <category term="iOS" scheme="https://samzong.me/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>在Linux终端使用SSR服务实现科学上网</title>
    <link href="https://samzong.me/2017/11/17/howto-use-ssr-on-linux-terminal/"/>
    <id>https://samzong.me/2017/11/17/howto-use-ssr-on-linux-terminal/</id>
    <published>2017-11-17T03:54:58.000Z</published>
    <updated>2017-11-17T03:54:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>昨天在群内看到有朋友在询问如何在Linux终端内使用SSR来实现科学上网，所以抽空研究了下在Linux中如何使用，本文参考了<a href="https://www.zfl9.com/" target="_blank" rel="noopener">Otokaze</a> 和 <a href="https://www.djangoz.com" target="_blank" rel="noopener">Django</a> 两位的博客，文章链接在博文最后；SSR服务提供商依然采用了<a href="http://ssglobal.co/wp" target="_blank" rel="noopener">ssGlobal</a>，在Google的过程中，找了不少解决方案，这里仅做一种简单整理，实验操作系统有CentOS 7.4 &amp; Ubuntu 16.04.3。</p><h4 id="ssr-代理服务"><a href="#ssr-代理服务" class="headerlink" title="ssr 代理服务"></a>ssr 代理服务</h4><h5 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h5><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> 需要本地git 环境</span></span><br><span class="line">yum install -y git</span><br><span class="line">git clone https://github.com/SAMZONG/gfwlist2privoxy.git</span><br><span class="line">cd gfwlist2privoxy/</span><br><span class="line">mv ssr /usr/local/bin</span><br><span class="line">chmod +x /usr/local/bin/ssr</span><br></pre></td></tr></table></figure><h5 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h5><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# ssr install</span><br><span class="line">Cloning into '/usr/local/share/shadowsocksr'...</span><br><span class="line">remote: Counting objects: 5490, done.</span><br><span class="line">remote: Total 5490 (delta 0), reused 0 (delta 0), pack-reused 5490</span><br><span class="line">Receiving objects: 100% (5490/5490), 1.71 MiB | 410.00 KiB/s, done.</span><br><span class="line">Resolving deltas: 100% (3799/3799), done.</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# ssr config # 配置文件路径 /usr/local/share/shadowsocksr/config.json</span><br><span class="line">&#123;</span><br><span class="line">    "server": "0..0.0.0",// ssr服务器ip</span><br><span class="line">    "server_ipv6": "::",</span><br><span class="line">    "server_port": 8080,// ssr服务器端口</span><br><span class="line">    "local_address": "127.0.0.1",</span><br><span class="line">    "local_port": 1080,</span><br><span class="line"></span><br><span class="line">    "password": "123456",// 对应password</span><br><span class="line">    "method": "none",// 这里对应SSGlobal配置中的Encryption</span><br><span class="line">    "protocol": "auth_chain_a",//对应protocl</span><br><span class="line">    "protocol_param": "",</span><br><span class="line">    "obfs": "http_simple",//对应obfs</span><br><span class="line">    "obfs_param": "hello.world",//对应obfs_param</span><br><span class="line">    "speed_limit_per_con": 0,</span><br><span class="line">    "speed_limit_per_user": 0,</span><br><span class="line"></span><br><span class="line">    "additional_ports" : &#123;&#125;, // only works under multi-user mode</span><br><span class="line">    "additional_ports_only" : false, // only works under multi-user mode</span><br><span class="line">    "timeout": 120,</span><br><span class="line">    "udp_timeout": 60,</span><br><span class="line">    "dns_ipv6": false,</span><br><span class="line">    "connect_verbose_info": 0,</span><br><span class="line">    "redirect": "",</span><br><span class="line">    "fast_open": false</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="启动-关闭"><a href="#启动-关闭" class="headerlink" title="启动/关闭"></a>启动/关闭</h5><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssr start</span><br><span class="line">ssr stop</span><br></pre></td></tr></table></figure><h5 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h5><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssr uninstall # 这里操作会删除/usr/local/share/shadowsocksr</span><br></pre></td></tr></table></figure><p>以上，本地监听服务已经配置完成了，在填写的过程中，要注意你的本地监听地址和监听端口，默认是127.0.0.1:1080，如果你修改了设置，那么在后续配置中也要配合修改。</p><h4 id="Privoxy-配置"><a href="#Privoxy-配置" class="headerlink" title="Privoxy 配置"></a>Privoxy 配置</h4><p>首先，需要安装privoxy</p><h6 id="CentOS-7-4"><a href="#CentOS-7-4" class="headerlink" title="CentOS 7.4"></a>CentOS 7.4</h6><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install -y epel-release</span><br><span class="line">yum install -y privoxy</span><br></pre></td></tr></table></figure><h6 id="Ubuntu-16-04"><a href="#Ubuntu-16-04" class="headerlink" title="Ubuntu 16.04"></a>Ubuntu 16.04</h6><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y privoxy</span><br></pre></td></tr></table></figure><h5 id="全局模式"><a href="#全局模式" class="headerlink" title="全局模式"></a>全局模式</h5><p>代理模式同其他平台上方式，将所有http/https请求走代理服务，如果需要全局代理的话按照如下操作即可，如果要使用PAC模式，请跳过此部分。</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> 添加本地ssr服务到配置文件</span></span><br><span class="line">echo 'forward-socks5 / 127.0.0.1:1080 .' &gt;&gt; /etc/privoxy/config</span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> Privoxy 默认监听端口是是8118</span></span><br><span class="line">export http_proxy=http://127.0.0.1:8118</span><br><span class="line">export https_proxy=http://127.0.0.1:8118</span><br><span class="line">export no_proxy=localhost</span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> 启动服务</span></span><br><span class="line">systemctl start privoxy.service</span><br></pre></td></tr></table></figure><h5 id="PAC模式"><a href="#PAC模式" class="headerlink" title="PAC模式"></a>PAC模式</h5><p>使用GFWList是由AutoProxy官方维护，由众多网民收集整理的一个中国大陆防火长城的屏蔽列表，这里感谢<a href="https://www.zfl9.com/" target="_blank" rel="noopener">@Otokaze</a> 为我们提供了转换shell自动转换脚本，为了方便修改，我fork了这个项目，将这篇教程所用到的资源进行了汇总，你可以在最开始<code>git clone</code>的目录中找到执行脚本。</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# cd gfwlist2privoxy/</span><br><span class="line">[root@localhost gfwlist2privoxy]# ls</span><br><span class="line">gfw.action  gfwlist2privoxy  README.md  ssr</span><br><span class="line">[root@localhost gfwlist2privoxy]# bash gfwlist2privoxy</span><br><span class="line">proxy(socks5): 127.0.0.1:1080# 注意，如果你修改了ssr本地监听端口是需要设置对应的</span><br><span class="line">&#123;+forward-override&#123;forward-socks5 127.0.0.1:1080 .&#125;&#125;</span><br><span class="line"></span><br><span class="line">=================================================================</span><br><span class="line"></span><br><span class="line">"cp -af /root/gfwlist2privoxy/gfw.action /etc/privoxy/"</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# cp -af gfw.action /etc/privoxy/</span><br><span class="line">[root@localhost ~]# echo 'actionsfile gfw.action' &gt;&gt; /etc/privoxy/config</span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> Privoxy 默认监听端口是是8118</span></span><br><span class="line">export http_proxy=http://127.0.0.1:8118</span><br><span class="line">export https_proxy=http://127.0.0.1:8118</span><br><span class="line">export no_proxy=localhost</span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> 启动服务</span></span><br><span class="line">systemctl start privoxy.service</span><br></pre></td></tr></table></figure><h5 id="proxy-环境变量"><a href="#proxy-环境变量" class="headerlink" title="proxy 环境变量"></a>proxy 环境变量</h5><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> privoxy默认监听端口为8118</span></span><br><span class="line">export http_proxy=http://127.0.0.1:8118</span><br><span class="line">export https_proxy=http://127.0.0.1:8118</span><br><span class="line">export no_proxy=localhost</span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> no_proxy是不经过privoxy代理的地址</span></span><br><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> 只能填写具体的ip、域名后缀，多个条目之间使用<span class="hljs-string">','</span>逗号隔开</span></span><br><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> 比如: <span class="hljs-built_in">export</span> no_proxy=<span class="hljs-string">"localhost, 192.168.1.1, ip.cn, chinaz.com"</span></span></span><br><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> 访问 localhost、192.168.1.1、ip.cn、*.ip.cn、chinaz.com、*.chinaz.com 将不使用代理</span></span><br></pre></td></tr></table></figure><h4 id="代理测试"><a href="#代理测试" class="headerlink" title="代理测试"></a>代理测试</h4><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> 访问各大网站，如果都有网页源码输出说明代理没问题</span></span><br><span class="line">curl -sL www.baidu.com</span><br><span class="line">curl -sL www.google.com</span><br><span class="line">curl -sL www.google.com.hk</span><br><span class="line">curl -sL www.google.co.jp</span><br><span class="line">curl -sL www.youtube.com</span><br><span class="line">curl -sL mail.google.com</span><br><span class="line">curl -sL facebook.com</span><br><span class="line">curl -sL twitter.com</span><br><span class="line">curl -sL www.wikipedia.org</span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> 获取当前 IP 地址</span></span><br><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> 如果使用 privoxy 全局模式，则应该显示 ss 服务器的 IP</span></span><br><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> 如果使用 privoxy gfwlist模式，则应该显示本地公网 IP</span></span><br><span class="line">curl -sL ip.chinaz.com/getip.aspx</span><br></pre></td></tr></table></figure><h5 id="管理脚本"><a href="#管理脚本" class="headerlink" title="管理脚本"></a>管理脚本</h5><p>在以上部署操作完成后，应该已经可以正常科学上网了，但是如果需要进行管理时，需要分别管理ssr和privoxy，为了方便管理，这里写了一个shell脚本方便管理: ssr_manager</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash">!/bin/bash</span></span><br><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> Author Samzong.lu</span></span><br><span class="line"></span><br><span class="line">case $1 in</span><br><span class="line">start)</span><br><span class="line">ssr start &amp;&gt; /var/log/ssr-local.log</span><br><span class="line">systemctl start privoxy.service</span><br><span class="line">export http_proxy=http://127.0.0.1:8118</span><br><span class="line">export https_proxy=http://127.0.0.1:8118</span><br><span class="line">export no_proxy="localhost, ip.cn, chinaz.com"</span><br><span class="line">;;</span><br><span class="line">stop)</span><br><span class="line">unset http_proxy https_proxy no_proxy</span><br><span class="line">systemctl stop privoxy.service</span><br><span class="line">ssr stop &amp;&gt; /var/log/ssr-log.log</span><br><span class="line">;;</span><br><span class="line">autostart)</span><br><span class="line">echo "ssr start" &gt;&gt; /etc/rc.local</span><br><span class="line">systemctl enable privoxy.service</span><br><span class="line">echo "http_proxy=http://127.0.0.1:8118" &gt;&gt; /etc/bashrc</span><br><span class="line">echo "https_proxy=http://127.0.0.1:8118" &gt;&gt; /etc/bashrc</span><br><span class="line">echo "no_proxy='localhost, ip.cn, chinaz.com'" &gt;&gt; /etc/bashrc</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">echo "usage: source $0 start|stop|autostart"</span><br><span class="line">exit 1</span><br><span class="line">;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><h5 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h5><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mv gfwlist2privoxy/ssr_manager /usr/local/bin</span><br><span class="line">chmod +x ssr_manager</span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> 启动服务</span></span><br><span class="line">ssr_manager start</span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> 关闭服务</span></span><br><span class="line">ssr_manager stop </span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> 添加开机自启动</span></span><br><span class="line">ssr_manager autostart</span><br></pre></td></tr></table></figure><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><ul><li><a href="https://www.zfl9.com/ss-local.html" target="_blank" rel="noopener">https://www.zfl9.com/ss-local.html</a></li><li><a href="https://www.djangoz.com/2017/08/16/linux_setup_ssr/" target="_blank" rel="noopener">https://www.djangoz.com/2017/08/16/linux_setup_ssr/</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;昨天在群内看到有朋友在询问如何在Linux终端内使用SSR来实现科学上网，所以抽空研究了下在Linux中如何使用，本文参考了&lt;a href=&quot;https://www.zfl9.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Otokaze&lt;/a&gt; 
      
    
    </summary>
    
      <category term="Shadowsocks" scheme="https://samzong.me/categories/Shadowsocks/"/>
    
    
      <category term="Shadowsocks" scheme="https://samzong.me/tags/Shadowsocks/"/>
    
  </entry>
  
  <entry>
    <title>HowTo Use SSR Service on Mac</title>
    <link href="https://samzong.me/2017/11/15/howto-user-ssr-on-mac/"/>
    <id>https://samzong.me/2017/11/15/howto-user-ssr-on-mac/</id>
    <published>2017-11-15T09:48:31.000Z</published>
    <updated>2017-11-15T09:48:31.000Z</updated>
    
    <content type="html"><![CDATA[<p>应邀制作一份关于Mac SSR的连接使用。</p><h4 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h4><ol><li>SSR 服务提供商，<a href="http://www.ssglobal.co/wp/" target="_blank" rel="noopener">SSGlobal</a> ，你可以到Telegram加入我们。<a href="https://t.me/joinchat/ESwgR0Ckp_zXMCuRKqykqA" target="_blank" rel="noopener">SSGlobal Group</a></li><li>MacOS 版本 10.12.6，经过实测OS版本对实际使用影响并不大。</li><li>SSR Client， <a href="http://www.ssglobal.co/wp/wp-content/uploads/2017/02/ShadowsocksX-NG-R8.dmg" target="_blank" rel="noopener">下载</a></li></ol><h4 id="SSR服务"><a href="#SSR服务" class="headerlink" title="SSR服务"></a>SSR服务</h4><p>如果你需要科学上网的话，非常愿意给你推荐我正在使用的SSR服务商，但是由于其官方网站和客户沟通工具TG需要科学上网才能使用，所以你可以联系到我来介绍你们。</p><p>最新定价计划：</p><ul><li>Plan-A：<strong>¥15.00元</strong>，1个月，无限流量，不限速，可自助切换节点。</li><li>Plan-B：<strong>¥15.00元</strong>，3个月，6G流量包，不限速，可自助切换节点。</li><li>增加线路：<strong>¥8.00元</strong>，1个月，1条。</li></ul><blockquote><p> 注：增加线路仅支持Plan-A用户配套购买，不超过主线路最长期限，不足1个月剩余时限用户不支持购买</p></blockquote><h5 id="注册账号"><a href="#注册账号" class="headerlink" title="注册账号"></a>注册账号</h5><p><a href="http://www.ssglobal.co/wp/registration/?action=register" target="_blank" rel="noopener">立即注册</a></p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/x6fbl.jpg" alt="05"></p><blockquote><p>这里alexman@mac.local 仅仅是演示邮箱，请填写对应属于你的邮箱.</p></blockquote><p>当你点击提交完成后，在你的邮箱会收到一封激活邮件，点击其中链接或将链接复制到浏览器中即可激活。</p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/r4oo0.jpg" alt="07"></p><blockquote><p>这里同样是激活链接，同样仅作为演示。</p></blockquote><h5 id="登录系统"><a href="#登录系统" class="headerlink" title="登录系统"></a>登录系统</h5><p><a href="http://www.ssglobal.co/wp/login-2/?redirect_to=http://www.ssglobal.co/wp/registration/" target="_blank" rel="noopener">立即登录</a></p><p>输入注册时的用户名密码，即可登录到系统内，然后在首页找到进入后台按钮，即可看到试用信息。</p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/lmcst.jpg" alt="06"></p><blockquote><p>这里填写用户名或邮箱都可以。</p></blockquote><p>进入系统后，找到订阅链接信息，默认情况下，你应该只有一条线路信息，付费用户享有应急通道。</p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/xba0a.jpg" alt="04"></p><blockquote><p>上图中”切换“，用来切换不同服务器节点，注意，切换后要到客户端内刷新订阅信息，下面会讲到。</p></blockquote><h4 id="SSR-Client-安装"><a href="#SSR-Client-安装" class="headerlink" title="SSR Client 安装"></a>SSR Client 安装</h4><p>在本文最上面已经有了，如何下载SSR 客户端的地方，细心的朋友，应该已经在SSGlobal官网上找到了对应下载页面，其中包含全平台的客户端工具。</p><h5 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h5><p><a href="http://www.ssglobal.co/wp/wp-content/uploads/2017/02/ShadowsocksX-NG-R8.dmg" target="_blank" rel="noopener">立即下载</a></p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/bc4jy.jpg" alt="01"></p><p>下载完成后，找到你的下载文件，双击打开，将程序拖到Mac程序目录即完成安装，和Mac其他软件安装并无不同。</p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/p7wkf.jpg" alt="02"></p><h4 id="启动程序"><a href="#启动程序" class="headerlink" title="启动程序"></a>启动程序</h4><p> 在Launchpad中找到最近安装的 Shadowsocks NG R8，点击启动后，Mac右上角导航栏中会有一个小飞机的图标，点击可以看到以下信息：</p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/iycjw.jpg" alt="03"></p><blockquote><p>上图中已经有我的订阅信息，请忽略</p></blockquote><h4 id="编辑订阅信息"><a href="#编辑订阅信息" class="headerlink" title="编辑订阅信息"></a>编辑订阅信息</h4><p>选择编辑订阅信息，然后将你在SSGlobal 网站后台拿到的订阅信息添加到其中</p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/7bbj6.jpg" alt="09"></p><blockquote><p>注意只要添加URL信息即可，不需要修改其他。</p></blockquote><p>然后选择手动更新订阅，这里在你的服务列表内，就有了你的服务器节点信息，选择对应节点即可开启科学上网</p><h5 id="PAC-规则"><a href="#PAC-规则" class="headerlink" title="PAC 规则"></a>PAC 规则</h5><p>首次使用PAC需要更新一次PAC规则，操作如下图。</p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/gzrb5.jpg" alt="10"></p><p>这里的PAC规则是从GFWLists更新的，由于其更新速度较慢，所以如果日常使用发现某些网站无法使用，可以手动添加到PAC规则内</p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/9rhe6.jpg" alt="11"></p><blockquote><p>|| domain , 这里表示匹配所有代理</p></blockquote><p>更多关于用户规则，可以查看这里，<a href="https://adblockplus.org/en/filter-cheatsheet" target="_blank" rel="noopener">使用手册</a> </p><h4 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h4><p>到这里，基本常用的安装和使用已经完成了，如果测试后仍旧无法正常使用，请仔细检查是否遗漏步骤，也可以与我取得沟通。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;应邀制作一份关于Mac SSR的连接使用。&lt;/p&gt;
&lt;h4 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;SSR 服务提供商，&lt;a href=&quot;http://www.ssglo
      
    
    </summary>
    
      <category term="Shadowsocks" scheme="https://samzong.me/categories/Shadowsocks/"/>
    
    
      <category term="Shadowsocks" scheme="https://samzong.me/tags/Shadowsocks/"/>
    
  </entry>
  
  <entry>
    <title>HowTo-use-TortoiseGit-for-Windows</title>
    <link href="https://samzong.me/2017/10/19/tortoisegit-for-windows/"/>
    <id>https://samzong.me/2017/10/19/tortoisegit-for-windows/</id>
    <published>2017-10-19T08:47:44.000Z</published>
    <updated>2019-06-13T22:56:45.395Z</updated>
    
    <content type="html"><![CDATA[<p>Git是目前最先进的版本控制系统，越来越多的业务场景都在使用Git，风靡全球的Github更是让Git版本控制系统名声大震，但是GitHub旨在建立一个开源的生态环境，所以不适合企业内部的管理系统，在之前的文章中，我也讲到了如何搭建GitLab，可以在企业内部自建一套功能完善的Git版本控制系统。</p><p>GitLab是一个非常成熟的服务端应用，但是作为一名开发人员，我们在使用GitLab与其他人员协同版本时，需要有一个工作对我们的每次修改更新以及推送，这也是版本控制工具的真正精髓；在不同的平台有着很多丰富的应用软件，所以挑选一款适合自己的Git GUI工具很重要。</p><p>目前在众多Git Client之中做的比较好的是SourceTree，并且同时支持Mac和Windows双平台，但是有一个问题，当我们在初次安装时需要验证Atlassian账号，但是Atlassian的注册页面用了requirejs，而且是用了Google的CDN服务，所以必须翻墙，这对很多中国用户的使用造成了不变；所以，今天我在这里推荐一个在Windows平台下同样可以作为Git图形化客户端工具的：<a href="https://tortoisegit.org/" target="_blank" rel="noopener">TortoiseGit</a></p><p>TortoiseGit 是 TortoiseSVN 的 Git 版本，TortoiseGit用于迁移 TortoiseSVN 到 TortoiseGit，解决了在Windows平台之上没有合适Git图形化客户端的问题，TortoiseGit不仅免费，而且同样支持丰富的语言包，但是需要独立下载语言包安装，默认只有英文，注意语言包与程序版本一定要匹配。</p><h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><p>TortoiseGit的官方下载地址是这里：<a href="https://tortoisegit.org/download/" target="_blank" rel="noopener">https://tortoisegit.org/download/</a> ，下载时请注意与你系统的兼容性。</p><blockquote><p>注意TortoiseGit 1.8.16之后的版本不在支持Windows XP 和 Server 2003</p></blockquote><p>因为TortoiseGit官网不在国内，所以在访问下载时速度非常的慢，我将目前的稳定版本2.4上传到我的百度云盘，但是以后我可能不能及时更新，所以如果你对版本要求不是很高，可以点击下面链接下载。</p><p>链接: <a href="https://pan.baidu.com/s/1eScNjA6" target="_blank" rel="noopener">https://pan.baidu.com/s/1eScNjA6</a> 密码: 31hu</p><blockquote><p>如链接失效，您可以通过本页面右下角展开通过邮箱，与我取得联系。</p></blockquote><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><h5 id="Git-for-Windows"><a href="#Git-for-Windows" class="headerlink" title="Git for Windows"></a>Git for Windows</h5><p>首先，我们需要安装Git在你的电脑上，这保证你的TortoiseGit运行时所需要的依赖环境。</p><p>下载地址：<a href="https://git-for-windows.github.io/" target="_blank" rel="noopener">https://git-for-windows.github.io/</a></p><p>同样，因为某些网络的原因，导致我们在下载时也会很慢，所以我也将目前最新2.13版本上传到了我的百度云盘：</p><p>链接: <a href="https://pan.baidu.com/s/1c12ZvRq" target="_blank" rel="noopener">https://pan.baidu.com/s/1c12ZvRq</a> 密码: 43yt</p><p>安装过程，这里不在展示，通常情况下，你只需要一路点击Next即可，但是如果你想要修改一些设置，例如默认的安装位置，那么你需要注意下，在TortoiseGit初次启动时，你需要手动设置Git.exe的位置。</p><h5 id="TortoiseGit"><a href="#TortoiseGit" class="headerlink" title="TortoiseGit"></a>TortoiseGit</h5><p>我的测试系统是Windows 7 旗舰版 64位，并且支持TortoiseGit最新的版本。</p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/q39b4.jpg" alt></p><p>请依次安装上图中两个软件，注意LanguagePack应该在主程序之后安装，同样，你也只需要一路点击Next即可。</p><p>在你安装完成之后，在该目录的空白区域，单击鼠标右键，你应该会看到新增了TortoiseGit的选项，我们选择”TortoiseGit”>“Settings”来初始化我们设置。</p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/educ5.jpg" alt></p><h5 id="修改程序语言为中文"><a href="#修改程序语言为中文" class="headerlink" title="修改程序语言为中文"></a>修改程序语言为中文</h5><p>如果英文你的使用不会有影响，你可以略过这一步骤，同样你也不需要下载上面的LanguagePack包。</p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/afmvd.jpg" alt></p><p>好了，按照如上图中操作，你应该已经修改了程序语言为中文，再次到空白区域单击测试就可以看到了。</p><h4 id="使用TortoiseGit克隆你的项目"><a href="#使用TortoiseGit克隆你的项目" class="headerlink" title="使用TortoiseGit克隆你的项目"></a>使用TortoiseGit克隆你的项目</h4><p>在我们安装了好TortoiseGit和Git的基本基础环境之后，我们需要使用TortoiseGit克隆项目，这里我们是在GitHub创建了一个测试项目，你可以直接使用你的项目地址即可。</p><h5 id="测试项目"><a href="#测试项目" class="headerlink" title="测试项目"></a>测试项目</h5><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/ot84j.jpg" alt></p><p>GitHub和GitLab都提供了通过使用HTTPS和SSH的方式，这两种方式有些不同，我会在下面分开讲述如何使用。</p><h5 id="SSH验证方式"><a href="#SSH验证方式" class="headerlink" title="SSH验证方式"></a>SSH验证方式</h5><p>如果采用SSH验证方式，那么你需要生成一对公钥和私钥，并且将公钥上传到你的GitLab或GitHub上，然后在克隆你的项目时，使用匹配的私钥即可。</p><p>那在Windows如何上生成私钥呢？其实我们在安装TortoiseGit时已经默认安装PuTTYgen工具，我们可以利用它来创建秘钥。</p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/dh1fb.jpg" alt></p><p>打开PuTTYgen，点击generate即可创建密钥，PuTTYgen其实是按照鼠标运行的轨迹来计算的，所以在点击后，我们不停的使用鼠标移动，等待进度条完成就可以了。</p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/2uyf3.jpg" alt></p><p>当创建完成之后，你可以看到以下以下内容，注意不要关闭，我们要点击<code>Save public key</code>和<code>Save private key</code>，并将上public key传到你的GitHub或GitLab账户之中。</p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/stgw9.jpg" alt></p><blockquote><p>注意，我在图中隐去了其他SSH keys信息，我建议你在做类似分享时也注意隐去你的重要信息</p></blockquote><p>好了，接下来，我们就要开克隆我们的项目了，在你想要存放项目的目录内，鼠标右键选择”Git克隆“，然后输入你的项目URL，并且加载我们刚刚生产私钥文件。</p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/y7dsh.jpg" alt></p><p>注意，在你确认都没问题的情况下，点击确认，然后你就会看到如下页面，如果这个过程中出现问题，请注意检查项目URL和私钥文件是否正确。</p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/bltrs.jpg" alt></p><p>到这里，我们SSH验证仓库的方式就全好，接下来我们就可以使用开始进行我们的工作，但在首次提交我们的项目时，需要设置用户名和密码，这是为了方便验证我们的身份。</p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/07sxd.jpg" alt></p><p>点击”是“，在弹出的窗口中设定用户名和邮箱，保存即可。</p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/wid9v.jpg" alt></p><h5 id="HTTPS-or-HTTP"><a href="#HTTPS-or-HTTP" class="headerlink" title="HTTPS or HTTP"></a>HTTPS or HTTP</h5><p>在使用GitLab为公司内部仓库时，可以不开通HTTPS验证，HTTP也不会影响我们的验证方式，但是从安全的角度上来说，强烈建议启用HTTPS，HTTPS加密传输可以给我们的代码和用户信息的安全提供更好的保护。</p><p>如果使用HTTPS or HTTP的方式，我们不需要增加任何密钥文件或怎样，只需要使用我们现有的GitHub或GitLab账号即可；在你想要存放项目的目录内，鼠标右键选择”Git克隆“，在弹出的窗口中，注意项目URL要是用HTTPS，并且去掉勾选加载密钥选项。</p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/givvr.jpg" alt></p><p><strong>如果你的项目在GitLab上</strong>，并且这个项目是一个私有项目，那么这里就会要求你输入你的GitLab用户名和密码，输入正确的用户和密码就可以成功克隆了。</p><p>但是，由于我的测试项目在GitHub上，GitHub上的项目默认都是公开项目，所以在这一步骤不会询问我的用户名和密码，只有在我需要将本地更新推送到GitHub时才会验证；所以接下来我在项目目录下新增文件newfile2.txt，</p><blockquote><p>注意，Git不同SVN，Git的提交不会将更新推送到远端服务器，所以我们在提交成功之后，再去手动推送</p></blockquote><p>右键选择Git提交，会弹出提交页面，我们需要这里，输入提交说明信息，和需要提交的文件。</p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/ata4r.jpg" alt></p><p>点击”提交之后“，我们会看成功提交的窗口，然后在窗口选择点击推送；</p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/q4cq7.jpg" alt></p><p>当我们点击推送之后，会要求输入对应的GitHub用户名和密码：</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Git是目前最先进的版本控制系统，越来越多的业务场景都在使用Git，风靡全球的Github更是让Git版本控制系统名声大震，但是GitHub旨在建立一个开源的生态环境，所以不适合企业内部的管理系统，在之前的文章中，我也讲到了如何搭建GitLab，可以在企业内部自建一套功能完
      
    
    </summary>
    
      <category term="Git" scheme="https://samzong.me/categories/Git/"/>
    
    
      <category term="Git" scheme="https://samzong.me/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>CentOS 7 Configure DNS Server</title>
    <link href="https://samzong.me/2017/09/13/centos7-configure-dns-server/"/>
    <id>https://samzong.me/2017/09/13/centos7-configure-dns-server/</id>
    <published>2017-09-13T07:01:17.000Z</published>
    <updated>2017-09-13T07:01:17.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天介绍下如何在CentOS 7下部署DNS Server，测试环境中服务端搭建在了CentOS 7，客户端分别在Windows和Linux实现测试。</p><p>因为目的是让自建DNS服务器解析公司内部的自定义域名，所以当客户端需要访问外网域名时，DNS服务器会将解析请求转发给ISP的DNS服务器，并会将解析结果缓存，并且只对内网主机的解析请求进行转发，而不会对公网的主机解析请求进行转发。</p><h4 id="DNS服务介绍"><a href="#DNS服务介绍" class="headerlink" title="DNS服务介绍"></a>DNS服务介绍</h4><p>DNS服务由BIND提供，启动后服务名为<code>named</code>，管理工具为<code>rndc</code>，debug工具为<code>dig</code>，主要配置文件在<code>/etc/named.conf</code>。</p><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>推荐选择<code>bind-chroot</code>来安装，提高服务的安全性：<br><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ yum install -y bind-chroot</span><br></pre></td></tr></table></figure></p><p>安装完成之后，启动<code>named-chroot</code>服务，并设置为开机自启动：<br><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ systemctl enable named-chroot.service</span><br><span class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/named-chroot.service to /usr/lib/systemd/system/named-chroot.service.</span><br><span class="line">➜  ~ systemctl start named-chroot.service</span><br><span class="line">➜  ~ netstat -ntlp | grep 53</span><br><span class="line">tcp        0      0 127.0.0.1:53            0.0.0.0:*               LISTEN      4515/named</span><br><span class="line">tcp        0      0 127.0.0.1:953           0.0.0.0:*               LISTEN      4515/named</span><br></pre></td></tr></table></figure></p><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>首先备份DNS服务端的主配置文件，然后修改其中的内容：<br><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ cp /etc/named.conf /etc/named.conf.bak</span><br><span class="line">➜  ~ vim /etc/named.conf</span><br><span class="line"></span><br><span class="line">options &#123;</span><br><span class="line">        listen-on port 53 &#123; any; &#125;;</span><br><span class="line">        listen-on-v6 port 53 &#123; ::1; &#125;;</span><br><span class="line">        directory       "/var/named";</span><br><span class="line">        dump-file       "/var/named/data/cache_dump.db";</span><br><span class="line">        statistics-file "/var/named/data/named_stats.txt";</span><br><span class="line">        memstatistics-file "/var/named/data/named_mem_stats.txt";</span><br><span class="line">        </span><br><span class="line">        allow-query     &#123; 192.168.16.0/24; 192.168.0.0/23; &#125;;</span><br><span class="line">        recursion yes;</span><br><span class="line">        allow-recursion &#123; 192.168.16.0/24; 192.168.0.0/23; &#125;;</span><br><span class="line">        </span><br><span class="line">        forward first;</span><br><span class="line">        forwarders &#123; 202.96.209.133; 114.114.114.114; &#125;;</span><br><span class="line">        </span><br><span class="line">        dnssec-enable no;</span><br><span class="line">        dnssec-validation no;</span><br><span class="line">        dnssec-lookaside no;</span><br><span class="line"></span><br><span class="line">        bindkeys-file "/etc/named.iscdlv.key";</span><br><span class="line">        managed-keys-directory "/var/named/dynamic";</span><br><span class="line"></span><br><span class="line">        pid-file "/run/named/named.pid";</span><br><span class="line">        session-keyfile "/run/named/session.key";</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">logging &#123;</span><br><span class="line">        channel default_debug &#123;</span><br><span class="line">                file "data/named.run";</span><br><span class="line">                severity dynamic;</span><br><span class="line">        &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">zone "." IN &#123;</span><br><span class="line">        type hint;</span><br><span class="line">        file "named.ca";</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 新增一个samzong.local域名.</span><br><span class="line">zone "samzong.local" IN &#123;</span><br><span class="line">    type master;</span><br><span class="line">    file "samzong.local.zone";</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">include "/etc/named.rfc1912.zones";</span><br><span class="line">include "/etc/named.root.key";</span><br></pre></td></tr></table></figure></p><h4 id="编辑samzong-local-zone配置文件"><a href="#编辑samzong-local-zone配置文件" class="headerlink" title="编辑samzong.local.zone配置文件"></a>编辑samzong.local.zone配置文件</h4><p>首先创建samzong.local.zone文件：<br><figure class="highlight irpf90 hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ cd /var/<span class="hljs-keyword">named</span></span><br><span class="line">➜  <span class="hljs-keyword">named</span> <span class="hljs-keyword">touch</span> samzong.local.zone;</span><br></pre></td></tr></table></figure></p><p>然后编辑文件内容新增：<br><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">$</span><span class="hljs-bash">TTL 86400</span></span><br><span class="line">@ IN SOA @ root.samzong.local. (</span><br><span class="line">    2016042112 ;Serial</span><br><span class="line">    3600 ;Refresh</span><br><span class="line">    1800 ;Retry</span><br><span class="line">    604800 ;Expire</span><br><span class="line">    43200 ;Minimum TTL</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">        NS  @</span><br><span class="line">        A       10.0.2.6</span><br><span class="line">www     A       192.168.16.100</span><br><span class="line">a   IN  CNAME   www.baidu.com.</span><br><span class="line">b       A       192.168.16.101</span><br></pre></td></tr></table></figure></p><p>编辑完成之后，重新启动named-chroot让服务生效：<br><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜  named systemctl restart named-chroot.service</span><br></pre></td></tr></table></figure></p><h4 id="客户端验证"><a href="#客户端验证" class="headerlink" title="客户端验证"></a>客户端验证</h4><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">➜  named nslookup www.samzong.local</span><br><span class="line">Server:192.168.16.6</span><br><span class="line">Address:192.168.16.6#53</span><br><span class="line"></span><br><span class="line">Name:www.samzong.local</span><br><span class="line">Address: 192.168.16.100</span><br></pre></td></tr></table></figure><h4 id="使用rndc管理DNS解析记录"><a href="#使用rndc管理DNS解析记录" class="headerlink" title="使用rndc管理DNS解析记录"></a>使用rndc管理DNS解析记录</h4><p>rndc 常用指令：<br><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">status          显示bind服务器的工作状态</span><br><span class="line">reload          重新加载配置文件和区域文件</span><br><span class="line">reload zone     重新加载指定的zone</span><br><span class="line">reconfig        重新读取配制间并加载新增的zone</span><br><span class="line">querylog        关闭或开启查询日志</span><br><span class="line">dumpdb          将高速缓存转存到文件,named.conf 有指定文件位置</span><br><span class="line">freeze          暂停更新所有zone状态</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天介绍下如何在CentOS 7下部署DNS Server，测试环境中服务端搭建在了CentOS 7，客户端分别在Windows和Linux实现测试。&lt;/p&gt;
&lt;p&gt;因为目的是让自建DNS服务器解析公司内部的自定义域名，所以当客户端需要访问外网域名时，DNS服务器会将解析请
      
    
    </summary>
    
      <category term="CentOS" scheme="https://samzong.me/categories/CentOS/"/>
    
    
      <category term="CentOS" scheme="https://samzong.me/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>Mac 如何快速录制GiF小视频</title>
    <link href="https://samzong.me/2017/09/12/mac-recoding-gif/"/>
    <id>https://samzong.me/2017/09/12/mac-recoding-gif/</id>
    <published>2017-09-12T08:36:37.000Z</published>
    <updated>2017-09-12T08:36:37.000Z</updated>
    
    <content type="html"><![CDATA[<p>在平时的沟通中经常有需要用到分享一个连续的操作等，在很多时候截图不能满足我的需求，录制视频文件的话呢，文件过大，不同平台限制过多是一个很麻烦的视频，所以录制GIF是一个非常好的解决办法，今天给大家推荐两款软件，关于录制GIF和GIF编辑。</p><h4 id="录制工具-1-Kap"><a href="#录制工具-1-Kap" class="headerlink" title="录制工具(1) Kap"></a>录制工具(1) Kap</h4><p>Kap是一款轻量级开源的GIF录制工具，这意味它是免费简单易用；你可以从官网下载。<a href="https://getkap.co/" target="_blank" rel="noopener">官网</a></p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/sbuwo.gif" alt></p><p>安装完成，启动Kap，它是以一个圆环的形式显示在状态栏上，所有的界面都在这里，你可以点击红框直接开始录制，点击后你的屏幕上会出现一个虚线框，你可以通过拖动四角调整大小。</p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/vcaug.gif" alt></p><p>确定好录制范围之后，这时你发现Kap上红色录制按钮一个变成一个红色实心圆，再次单击即可开始录制。</p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/9txw3.gif" alt></p><p>在你操作完成之后，再次单击，即可结束录制。</p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/lws2b.gif" alt></p><h4 id="录制工具-2-MacApp：QuickTime-Player"><a href="#录制工具-2-MacApp：QuickTime-Player" class="headerlink" title="录制工具(2) MacApp：QuickTime Player"></a>录制工具(2) MacApp：QuickTime Player</h4><p>以上管理Kap的使用GIF录制我是用过Mac自带的QuickTime Player录制，教程可以直接看 @JasonZone 的教程 <a href="https://mp.weixin.qq.com/s/lgHOrpZ2PE8hJWU3O_IDUA" target="_blank" rel="noopener">链接</a></p><h4 id="GIF编辑"><a href="#GIF编辑" class="headerlink" title="GIF编辑"></a>GIF编辑</h4><p>在@JasonZone 最后使用的是一个网站进行了从mov转换为gif格式的操作，这里推荐一个Mac应用 <a href="http://www.aiseesoft.com/app-store/video-to-gif-maker/" target="_blank" rel="noopener">Video to Gif Maker</a>，可以批量进行多个GIF文件转换，也支持在GIF增加文字或图片，这很实用。</p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/5yogy.gif" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在平时的沟通中经常有需要用到分享一个连续的操作等，在很多时候截图不能满足我的需求，录制视频文件的话呢，文件过大，不同平台限制过多是一个很麻烦的视频，所以录制GIF是一个非常好的解决办法，今天给大家推荐两款软件，关于录制GIF和GIF编辑。&lt;/p&gt;
&lt;h4 id=&quot;录制工具-
      
    
    </summary>
    
      <category term="Mac" scheme="https://samzong.me/categories/Mac/"/>
    
    
      <category term="Mac" scheme="https://samzong.me/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>MacTips 单独设置程序语言</title>
    <link href="https://samzong.me/2017/09/04/mactips-choose-apps-deafults-language/"/>
    <id>https://samzong.me/2017/09/04/mactips-choose-apps-deafults-language/</id>
    <published>2017-09-04T05:42:44.000Z</published>
    <updated>2017-09-04T05:42:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>Mac 上系统语言设置成英文查看起来是最舒适的，所以我很早就将系统语言改成英文，但是在自身英语水平有限，应对基本的单词没有问题，但是在查看例如Word、PowerPoint这类应用时，有大量的选项大脑转化速度较慢，影响工作效率，所以有时在做PPT时，不得已要将系统切换到中文，这对我来说是一件很麻烦的事情，但是今天在网上找到一个帖子<a href="http://www.viblue.com/wiki/469264501.html" target="_blank" rel="noopener">原文</a>，其实一个命令就可以搞定我的问题，修改某一软件的默认语言。</p><h5 id="Command"><a href="#Command" class="headerlink" title="Command"></a>Command</h5><figure class="highlight arduino hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defaults <span class="hljs-built_in">write</span> <span class="hljs-string">'&#123;AppName&#125;'</span> AppleLanguages <span class="hljs-string">'("Your choose language")'</span></span><br></pre></td></tr></table></figure><p>这不会影响到我们其他软件的使用。</p><h5 id="Tips"><a href="#Tips" class="headerlink" title="Tips:"></a>Tips:</h5><p>我在一次切换Outlook语言时使用上面的命令不能生效，经过研究稍微改造了一下命令：</p><figure class="highlight stylus hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defaults write com<span class="hljs-selector-class">.microsoft</span><span class="hljs-selector-class">.Outlook</span> AppleLanguages -array zh</span><br></pre></td></tr></table></figure><h5 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h5><ol><li>修改Microsoft Office Applocation.</li></ol><figure class="highlight stylus hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defaults write com<span class="hljs-selector-class">.microsoft</span><span class="hljs-selector-class">.Word</span> AppleLanguages <span class="hljs-string">'("zh-CN")'</span></span><br></pre></td></tr></table></figure><figure class="highlight stylus hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defaults write com<span class="hljs-selector-class">.microsoft</span><span class="hljs-selector-class">.Excel</span> AppleLanguages <span class="hljs-string">'("zh-CN")'</span></span><br></pre></td></tr></table></figure><figure class="highlight stylus hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defaults write com<span class="hljs-selector-class">.microsoft</span><span class="hljs-selector-class">.Powerpoint</span> AppleLanguages <span class="hljs-string">'("zh-CN")'</span></span><br></pre></td></tr></table></figure><ol><li>Mac 自带地图应</li></ol><p>Mac 自带地图非常的好用，但是中文会更适合我们的查看和标记</p><figure class="highlight stylus hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defaults write com<span class="hljs-selector-class">.apple</span><span class="hljs-selector-class">.Maps</span> AppleLanguages <span class="hljs-string">'("zh-CN")'</span></span><br></pre></td></tr></table></figure><blockquote><p>Tip：如果不知道程序名称时，可以在<code>com.</code>使用三次<code>Tab</code>键来查找程序名称.</p></blockquote><h5 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h5><p>如上操作，仅适合本身支持中英文的应用程序，如果程序本身不带有中文或者英文是无法使用的，当然有些应用也内置了语言切换按钮，可以优先使用程序自带的设置选项。</p><h5 id="去除设置"><a href="#去除设置" class="headerlink" title="去除设置"></a>去除设置</h5><p>ok，在我们增加了特定程序语言环境之后，如果手动切换系统语言之后，已设置的程序语言环境仍保留我们的手动设置情境，如若不需要，可以采用以下命令去除。<br><figure class="highlight actionscript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defaults <span class="hljs-keyword">delete</span> <span class="hljs-string">'&#123;AppName&#125;'</span> AppleLanguages</span><br></pre></td></tr></table></figure></p><ul><li>参考链接：<a href="http://www.viblue.com/wiki/469264501.html" target="_blank" rel="noopener">http://www.viblue.com/wiki/469264501.html</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Mac 上系统语言设置成英文查看起来是最舒适的，所以我很早就将系统语言改成英文，但是在自身英语水平有限，应对基本的单词没有问题，但是在查看例如Word、PowerPoint这类应用时，有大量的选项大脑转化速度较慢，影响工作效率，所以有时在做PPT时，不得已要将系统切换到中文
      
    
    </summary>
    
      <category term="Mac" scheme="https://samzong.me/categories/Mac/"/>
    
    
      <category term="Mac" scheme="https://samzong.me/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>Jmeter(一)：使用BlazeMeter为Jmeter录制脚本</title>
    <link href="https://samzong.me/2017/08/17/use_blazemeter_recodind_jmx/"/>
    <id>https://samzong.me/2017/08/17/use_blazemeter_recodind_jmx/</id>
    <published>2017-08-17T09:08:51.000Z</published>
    <updated>2017-08-17T09:08:51.000Z</updated>
    
    <content type="html"><![CDATA[<p>之前一直使用阿里云的PTS服务作为测试，但是今天发现阿里云的PTS服务正在升级无法使用，所以打算用Jmeter来做压力测试，并使用Chrome插件BlazeMeter来录制.jmx脚本。</p><h4 id="安装BlazeMeter插件"><a href="#安装BlazeMeter插件" class="headerlink" title="安装BlazeMeter插件"></a>安装BlazeMeter插件</h4><p><a href="https://chrome.google.com/webstore/search/blazemeter" target="_blank" rel="noopener">插件安装</a> , 需要能登录到Chrome应用商店，如果不能登录的话，可以在网上搜索下载crx包，手动加载到Chrome中即可。</p><p>安装成功之后，在Chrome插件栏可以看到程序入口，<img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/r0ps7.jpg" alt></p><p>BlazeMeter限制需要登录才能导出jmx脚本，所以首先需要注册账号。成功登陆后，完整界面如图所示：</p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/oamv4.png" alt></p><h4 id="录制过程"><a href="#录制过程" class="headerlink" title="录制过程"></a>录制过程</h4><p>填写测试脚本名称后，点击开始录制，执行一系列操作后，点停止录制，然后到处jmx文件到本地。</p><h4 id="导入脚本到Jmeter"><a href="#导入脚本到Jmeter" class="headerlink" title="导入脚本到Jmeter"></a>导入脚本到Jmeter</h4><p>在Jmeter中”File-Open”导入你jmx脚本，为了方便观察结果，我们需要增加一些察看报告。</p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/uxe75.jpg" alt></p><h5 id="聚合报告-Aggregate-Report"><a href="#聚合报告-Aggregate-Report" class="headerlink" title="聚合报告(Aggregate Report)"></a>聚合报告(Aggregate Report)</h5><p>我们可以在聚合报告中一些非常有用的信息，这有助于对性能测试的分析。</p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/j93gs.png" alt></p><ul><li>Samples ： 一共完成了多少事务</li><li>Averge ： 平均响应时间</li><li>Median ： 统计意义上的响应时间的中值</li><li>90% Line ：90%的事务响应时间都小于xx ms</li><li>Min ：最小响应时间 ms</li><li>Max :  最大响应时间 ms</li><li>Eror %  : 出错率</li><li>Throughput ： 吞吐量，事务/秒</li><li>KB/sec ： 用流量来衡量的吞吐量</li></ul><blockquote><p>吞吐量=完成的事务数/完成这些事务数所需要的时间；</p><p>平均响应时间=所有响应时间的总和/完成的事务数；</p><p>失败率=失败的个数/事务数。</p></blockquote><h5 id="查看结果树-View-Results-Tree"><a href="#查看结果树-View-Results-Tree" class="headerlink" title="查看结果树(View Results Tree)"></a>查看结果树(View Results Tree)</h5><p>通过查看结果树，可以看到每个事务的返回结果，其中红色是出错，绿色则为正常。建议在测试开始前将log/Display Only中Errors打上勾即可，不然会输出很多东西，不方便查看。</p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/moo9h.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;之前一直使用阿里云的PTS服务作为测试，但是今天发现阿里云的PTS服务正在升级无法使用，所以打算用Jmeter来做压力测试，并使用Chrome插件BlazeMeter来录制.jmx脚本。&lt;/p&gt;
&lt;h4 id=&quot;安装BlazeMeter插件&quot;&gt;&lt;a href=&quot;#安装Bla
      
    
    </summary>
    
      <category term="Jmeter" scheme="https://samzong.me/categories/Jmeter/"/>
    
    
      <category term="Jmeter" scheme="https://samzong.me/tags/Jmeter/"/>
    
  </entry>
  
  <entry>
    <title>How to install MariaDB 10.1 on CentOS 7.x</title>
    <link href="https://samzong.me/2017/08/07/install_mariadb10_centos7/"/>
    <id>https://samzong.me/2017/08/07/install_mariadb10_centos7/</id>
    <published>2017-08-07T08:33:52.000Z</published>
    <updated>2017-08-07T08:33:52.000Z</updated>
    
    <content type="html"><![CDATA[<p>CentOS 7.x 默认的MariaDB版本是5.5，但是在有些情况我们需要用到10版本，注意MariaDB与MySQL版本是不一样的，下面简单降下如何快速安装MariaDB10.1 到CentOS 7.x.</p><h4 id="创建MariaDB-10-1的Yum源"><a href="#创建MariaDB-10-1的Yum源" class="headerlink" title="创建MariaDB 10.1的Yum源"></a>创建MariaDB 10.1的Yum源</h4><figure class="highlight makefile hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF | sudo tee -a /etc/yum.repos.d/MariaDB.repo</span><br><span class="line"><span class="hljs-comment"># MariaDB 10.1 CentOS repository list</span></span><br><span class="line"><span class="hljs-comment"># http://downloads.mariadb.org/mariadb/repositories/</span></span><br><span class="line">[mariadb]</span><br><span class="line">name = MariaDB</span><br><span class="line">baseurl = http://yum.mariadb.org/10.1/centos7-amd64</span><br><span class="line">gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB</span><br><span class="line">gpgcheck=1</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><blockquote><p>注意MariaDB会随着时间的推移版本不断更新，你可以到<a href="http://downloads.mariadb.org/mariadb" target="_blank" rel="noopener">repo仓库</a>获取对应版本链接</p></blockquote><h4 id="使用Yum安装MariaDB-10-1-即可"><a href="#使用Yum安装MariaDB-10-1-即可" class="headerlink" title="使用Yum安装MariaDB 10.1 即可"></a>使用Yum安装MariaDB 10.1 即可</h4><figure class="highlight sql hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum <span class="hljs-keyword">install</span> MariaDB-<span class="hljs-keyword">server</span> MariaDB-<span class="hljs-keyword">client</span> -y</span><br></pre></td></tr></table></figure><h4 id="启动MariaDB并设置为开机自启动"><a href="#启动MariaDB并设置为开机自启动" class="headerlink" title="启动MariaDB并设置为开机自启动"></a>启动MariaDB并设置为开机自启动</h4><figure class="highlight css hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-tag">sudo</span> <span class="hljs-selector-tag">systemctl</span> <span class="hljs-selector-tag">start</span> <span class="hljs-selector-tag">mariadb</span><span class="hljs-selector-class">.service</span></span><br><span class="line"><span class="hljs-selector-tag">sudo</span> <span class="hljs-selector-tag">systemctl</span> <span class="hljs-selector-tag">enable</span> <span class="hljs-selector-tag">mariadb</span><span class="hljs-selector-class">.service</span></span><br></pre></td></tr></table></figure><h4 id="初始化MariaDB设置"><a href="#初始化MariaDB设置" class="headerlink" title="初始化MariaDB设置"></a>初始化MariaDB设置</h4><figure class="highlight routeros hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">sudo /usr/bin/mysql_secure_installation</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 回答以下问题，请记住你的数据库root用户密码:</span></span><br><span class="line"></span><br><span class="line">Enter current password <span class="hljs-keyword">for</span> root (enter <span class="hljs-keyword">for</span> none):  回车</span><br><span class="line"><span class="hljs-builtin-name">Set</span> root password? [Y/n]: Y</span><br><span class="line">New password: 你要设置的数据库root密码</span><br><span class="line">Re-enter new password: 你要设置的数据库root密码</span><br><span class="line"><span class="hljs-builtin-name">Remove</span> anonymous users? [Y/n]: Y</span><br><span class="line">Disallow root login remotely? [Y/n]: Y</span><br><span class="line"><span class="hljs-builtin-name">Remove</span> test database <span class="hljs-keyword">and</span> access <span class="hljs-keyword">to</span> it? [Y/n]: Y</span><br><span class="line">Reload privilege tables now? [Y/n]: Y</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;CentOS 7.x 默认的MariaDB版本是5.5，但是在有些情况我们需要用到10版本，注意MariaDB与MySQL版本是不一样的，下面简单降下如何快速安装MariaDB10.1 到CentOS 7.x.&lt;/p&gt;
&lt;h4 id=&quot;创建MariaDB-10-1的Yum源
      
    
    </summary>
    
      <category term="MySQL" scheme="https://samzong.me/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="https://samzong.me/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Git 使用规范流程</title>
    <link href="https://samzong.me/2017/08/03/team-use-git-standard/"/>
    <id>https://samzong.me/2017/08/03/team-use-git-standard/</id>
    <published>2017-08-03T08:14:56.000Z</published>
    <updated>2017-08-03T08:14:56.000Z</updated>
    
    <content type="html"><![CDATA[<p>团队开发中，遵循一个合理、清晰的Git使用流程，是非常重要的。否则，每个人都提交一堆杂乱无章的commit，项目很快就会变得难以协调和维护。下图是比较常规的Git使用规范流程，这能适合绝大多数团队开发的需求，推荐你们也这样使用。</p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/j4ndi.png" alt></p><h4 id="1-分支管理"><a href="#1-分支管理" class="headerlink" title="1.  分支管理"></a>1.  分支管理</h4><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/naweu.jpg" alt></p><ol><li><p>主分支Master：首先，代码库应该有一个、且仅有一个主分支。所有提供给用户使用的正式版本，都在这个主分支上发布。</p></li><li><p>开发分支Develop：主分支只用来分布重大版本，日常开发应该在另一条分支上完成。我们把开发用的分支，叫做Develop。</p></li><li><p>临时性分支</p><ol><li><p>功能分支 : 为了开发某种特定功能，从Develop分支上面分出来的。开发完成后，要再并入Develop，功能分支的名字，可以采用feature-*的形式命名。</p></li><li><p>预发布分支 : 指发布正式版本之前（即合并到Master分支之前），我们可能需要有一个预发布的版本进行测试,预发布分支是从Develop分支上面分出来的，预发布结束以后，必须合并进Develop和Master分支。它的命名，可以采用release-*的形式。</p></li><li><p>修补bug分支：软件正式发布以后，难免会出现bug。这时就需要创建一个分支，进行bug修补。修补bug分支是从Master分支上面分出来的。修补结束以后，再合并进Master和Develop分支。它的命名，可以采用fixbug-*的形式</p></li></ol></li></ol><p>​</p><h5 id="2-新建分支"><a href="#2-新建分支" class="headerlink" title="2. 新建分支"></a>2. 新建分支</h5><p>Master分支不允许进行开发，所有的开发相关操作都必须基于develop分支.</p><figure class="highlight crmsh hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 获取主分支最新代码</span></span><br><span class="line">git chekcout <span class="hljs-literal">master</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 新建develop分支进行开发</span></span><br><span class="line">git checkout -b develop</span><br></pre></td></tr></table></figure><h5 id="3-提交分支"><a href="#3-提交分支" class="headerlink" title="3. 提交分支"></a>3. 提交分支</h5><p>分支修改后，使用commit提交修改。</p><figure class="highlight dockerfile hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># add 所有新增的文件</span></span><br><span class="line">git <span class="hljs-keyword">add</span><span class="hljs-bash"> --all</span></span><br><span class="line"><span class="hljs-bash"></span></span><br><span class="line"><span class="hljs-bash"><span class="hljs-comment"># 提交更新， 每次提交必须写增加的东西和修改内容，保证协同开发是其他看到代码就能知道你做了什么</span></span></span><br><span class="line"><span class="hljs-bash">gti commit -m <span class="hljs-string">"first commit"</span></span></span><br></pre></td></tr></table></figure><h5 id="4-推送到远程仓库"><a href="#4-推送到远程仓库" class="headerlink" title="4. 推送到远程仓库"></a>4. 推送到远程仓库</h5><p>commit 之后，其实代码还在本地仓库，这时我们需要将本地版本与git远端仓库进行同步</p><figure class="highlight avrasm hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta"># 推送到远程develop分支</span></span><br><span class="line">git <span class="hljs-keyword">push</span> origin develop</span><br></pre></td></tr></table></figure><h5 id="5-合并分支"><a href="#5-合并分支" class="headerlink" title="5. 合并分支"></a>5. 合并分支</h5><p>当代码提交到远端develop分支后，应该让别人进行代码review和测试，确认无误后，合并到Master分支，完成开发。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;团队开发中，遵循一个合理、清晰的Git使用流程，是非常重要的。否则，每个人都提交一堆杂乱无章的commit，项目很快就会变得难以协调和维护。下图是比较常规的Git使用规范流程，这能适合绝大多数团队开发的需求，推荐你们也这样使用。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https
      
    
    </summary>
    
      <category term="Git" scheme="https://samzong.me/categories/Git/"/>
    
    
      <category term="Git" scheme="https://samzong.me/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>bypy-百度网盘Python客户端</title>
    <link href="https://samzong.me/2017/06/02/howto-install-bypy/"/>
    <id>https://samzong.me/2017/06/02/howto-install-bypy/</id>
    <published>2017-06-02T04:00:16.000Z</published>
    <updated>2017-06-02T04:00:16.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近在GitHub上发现一个有趣的项目，<a href="https://github.com/houtianze/bypy" target="_blank" rel="noopener">百度网盘Python客户端</a>(bypy)，主要使用在Linux命令行下，这样很大的一个好处是可以利用到百度云盘2TB的存储空间(如果你是会员有6TB)；你可以在任何服务器上，利用自动化脚本实现一些数据文件、日志文件等等备份操作，同时也提供丰富的文件列表、上传、下载、对比、同步以及批量操作等。</p><blockquote><p>虽然百度网盘Python客户端提供很大的便利，但是我强烈不建议将一些重要数据放到百度云盘</p></blockquote><h4 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h4><p>数据库备份文件自动上传到百度网盘</p><h4 id="环境依赖"><a href="#环境依赖" class="headerlink" title="环境依赖"></a>环境依赖</h4><ul><li>Python 2.7 or 3.0 以上</li><li>Encoding UTF-8</li></ul><h4 id="Python-环境"><a href="#Python-环境" class="headerlink" title="Python 环境"></a>Python 环境</h4><p>首先使用<code>python -V</code>检查你的Python版本，如果你的版本是2.7或以上，那么就不需要做任何操作，可以直接安装bypy，但是如果你像我一样多数是CentOS 6.x 那么就需要先升级Python版本。我这里是将Python升级到2.7。</p><h5 id="Install-Python-2-7"><a href="#Install-Python-2-7" class="headerlink" title="Install Python 2.7"></a>Install Python 2.7</h5><figure class="highlight sh hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># Check current Python version</span></span><br><span class="line">➜  ~ python -V</span><br><span class="line">Python 2.6.6</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># Download python 2.7.13 or new packge.</span></span><br><span class="line">➜  ~ wget http://www.python.org/ftp/python/2.7.13/Python-2.7.13.tar.xz</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># Extract and change in</span></span><br><span class="line">➜  ~ tar xf Python-2.7.13.tar.xz</span><br><span class="line">➜  ~ <span class="hljs-built_in">cd</span> Python-2.7.13</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># Run the configure:</span></span><br><span class="line">➜  Python-2.7.13 ./configure --prefix=/usr/<span class="hljs-built_in">local</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># Compile and install it:</span></span><br><span class="line">➜  Python-2.7.13 make &amp;&amp; make altinstall</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># Check Python Version</span></span><br><span class="line">➜  Python-2.7.13 python2.7 -V</span><br><span class="line">Python 2.7.13</span><br></pre></td></tr></table></figure><p>虽然Python2.7已经安装成功了，但是默认的Python仍然是2.6版本，所以我们要替换默认Python命令指到2.7</p><figure class="highlight sh hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># Update bin python to python2.7</span></span><br><span class="line">➜  ~ ll /usr/bin/python /usr/<span class="hljs-built_in">local</span>/bin/python2.7</span><br><span class="line">➜  ~ ll /usr/bin/python-config /usr/<span class="hljs-built_in">local</span>/bin/python2.7-config</span><br><span class="line">➜  ~ python -V</span><br><span class="line">Python 2.7.13</span><br></pre></td></tr></table></figure><h5 id="Can-not-use-Yum"><a href="#Can-not-use-Yum" class="headerlink" title="Can not use Yum ?"></a>Can not use Yum ?</h5><p>因为<code>yum</code>必须要使用Python2.6 ，所以当升级成功之后，发现yum无法使用，这时我们要稍微修改下：</p><figure class="highlight sh hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ <span class="hljs-built_in">which</span>-command yum</span><br><span class="line">/usr/bin/yum</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">#Update frist line "#!/usr/bin/python" to "#!/usr/bin/python2.6"</span></span><br><span class="line">➜  ~ vim /usr/bin/yum</span><br></pre></td></tr></table></figure><h4 id="安装bypy"><a href="#安装bypy" class="headerlink" title="安装bypy"></a>安装<code>bypy</code></h4><h5 id="Install-Setuptools-amp-requests"><a href="#Install-Setuptools-amp-requests" class="headerlink" title="Install Setuptools &amp; requests"></a>Install Setuptools &amp; requests</h5><figure class="highlight sh hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ wget --no-check-certificate https://pypi.python.org/packages/<span class="hljs-built_in">source</span>/s/setuptools/setuptools-1.4.2.tar.gz</span><br><span class="line">tar xf setuptools-1.4.2.tar.gz</span><br><span class="line">➜  ~ python setup.py install</span><br><span class="line"></span><br><span class="line">➜  ~ pip2.7 install requests</span><br></pre></td></tr></table></figure><h5 id="Clone-amp-Install"><a href="#Clone-amp-Install" class="headerlink" title="Clone &amp;  Install"></a>Clone &amp;  Install</h5><figure class="highlight sh hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ git <span class="hljs-built_in">clone</span> https://github.com/houtianze/bypy.git</span><br><span class="line">➜  ~ <span class="hljs-built_in">cd</span> bypy</span><br><span class="line">➜  bypy git:(master) python setup.py install</span><br></pre></td></tr></table></figure><p>如果安装失败，注意看报错，是否缺少Python依赖包，或者版本不对</p><h4 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h4><p>在成功安装完成之后，以下需要注意：</p><h5 id="授权"><a href="#授权" class="headerlink" title="授权"></a>授权</h5><p>首次安装之后，需要进行授权，只需要运行任何一个命令都可以，例如<code>bypy info</code>，然后根据提示，打开网页登录你的百度网盘账号，取得授权码，即可。</p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/2grhz.png" alt></p><p>复制上图中的链接到你的浏览器中，打开可以看到百度API授权页面，如下图，将授权码粘贴到命令行，然后回车等待验证通过即可。</p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/9zhdm.png" alt></p><p>然后再次运行命令时，就不需要进行身份验证了</p><figure class="highlight sh hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost bypy]<span class="hljs-comment"># bypy info</span></span><br><span class="line">Quota: 6.103TB</span><br><span class="line">Used: 180.074GB</span><br></pre></td></tr></table></figure><p>你可以看到我的百度网盘有6.103TB的空间，已经使用了180.074GB</p><h5 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h5><p>由于百度PCS API权限限制，程序只能存取百度云端/apps/bypy目录下面的文件和目录。通过以下链接可以打开你的bypy默认路径：</p><p> <a href="https://pan.baidu.com/disk/home#list/vmode=list&amp;path=%2Fapps%2Fbypy" target="_blank" rel="noopener">https://pan.baidu.com/disk/home#list/vmode=list&amp;path=%2Fapps%2Fbypy</a> </p><h6 id="查看"><a href="#查看" class="headerlink" title="查看"></a>查看</h6><p>我在百度网盘内增加了一个v6的文件夹，对应我服务器名称，这是我在服务器内利用命令即可看到。</p><figure class="highlight sh hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost bypy]<span class="hljs-comment"># bypy list</span></span><br><span class="line">/apps/bypy (<span class="hljs-variable">$t</span> <span class="hljs-variable">$f</span> <span class="hljs-variable">$s</span> <span class="hljs-variable">$m</span> <span class="hljs-variable">$d</span>):</span><br><span class="line">D v6 0 2017-06-02, 10:28:41</span><br></pre></td></tr></table></figure><h6 id="创建文件夹"><a href="#创建文件夹" class="headerlink" title="创建文件夹"></a>创建文件夹</h6><figure class="highlight sh hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="hljs-comment"># bypy mkdir v6/bypy</span></span><br><span class="line">[root@localhost ~]<span class="hljs-comment"># bypy list v6</span></span><br><span class="line">/apps/bypy/v6 (<span class="hljs-variable">$t</span> <span class="hljs-variable">$f</span> <span class="hljs-variable">$s</span> <span class="hljs-variable">$m</span> <span class="hljs-variable">$d</span>):</span><br><span class="line">D bypy 0 2017-06-02, 10:35:53</span><br></pre></td></tr></table></figure><h6 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h6><figure class="highlight sh hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="hljs-comment"># bypy upload bypy.tgz</span></span><br><span class="line">[root@localhost ~]<span class="hljs-comment"># bypy list</span></span><br><span class="line">/apps/bypy (<span class="hljs-variable">$t</span> <span class="hljs-variable">$f</span> <span class="hljs-variable">$s</span> <span class="hljs-variable">$m</span> <span class="hljs-variable">$d</span>):</span><br><span class="line">D v6 0 2017-06-02, 10:28:41</span><br><span class="line">D v6_1 0 2017-06-02, 10:34:52</span><br><span class="line">F bypy.tgz 2867963 2017-06-02, 10:37:30 aa4160cdbf2f4eca9baf0fcd395241fe</span><br></pre></td></tr></table></figure><h6 id="本地同步到百度网盘"><a href="#本地同步到百度网盘" class="headerlink" title="本地同步到百度网盘"></a>本地同步到百度网盘</h6><p>使用<code>syncup</code>参数将本地目录文件同步到百度网盘</p><figure class="highlight sh hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="hljs-comment"># bypy syncup ./bypy v6/bypy</span></span><br><span class="line">[root@localhost ~]<span class="hljs-comment"># bypy list v6/bypy</span></span><br><span class="line">/apps/bypy/v6/bypy (<span class="hljs-variable">$t</span> <span class="hljs-variable">$f</span> <span class="hljs-variable">$s</span> <span class="hljs-variable">$m</span> <span class="hljs-variable">$d</span>):</span><br><span class="line">D .git 0 2017-06-02, 10:45:31</span><br><span class="line">D baidudoc 0 2017-06-02, 10:44:50</span><br><span class="line">D build 0 2017-06-02, 10:45:11</span><br><span class="line">D bypy 0 2017-06-02, 10:45:54</span><br><span class="line">D bypy.egg-info 0 2017-06-02, 10:45:00</span><br><span class="line">D dist 0 2017-06-02, 10:44:54</span><br><span class="line">D update 0 2017-06-02, 10:45:08</span><br><span class="line">F .editorconfig 277 2017-06-02, 10:45:08 d9f71b00f908626ae68da571ca47cbe2</span><br><span class="line">F .gitignore 484 2017-06-02, 10:45:00 833d8511a69044a1f1c6e0fe4b3c3117</span><br><span class="line">F .travis.yml 628 2017-06-02, 10:44:58 9f377251309ced0a55548c18896ebd7a</span><br><span class="line">F CONTRIBUTING.md 683 2017-06-02, 10:44:52 f5e8a568937039e5853613ff0fe296ee</span><br><span class="line">F genrst.py 129 2017-06-02, 10:45:30 4565eddf226c2e8bed73d2c30dfae9f3</span><br><span class="line">F HISTORY.md 2542 2017-06-02, 10:45:11 16605670a55a3dd9768d4c862543eac4</span><br><span class="line">F HISTORY.rst 2639 2017-06-02, 10:44:57 7215fbd0a3be667fd7f9fda14f06c1a9</span><br><span class="line">F LICENSE 1078 2017-06-02, 10:44:59 ebd1a0c53ea3046f505b995629faf8fb</span><br><span class="line">F MANIFEST.in 116 2017-06-02, 10:44:50 c98e18e65329b318f13abd031a4397c4</span><br><span class="line">F README.md 6276 2017-06-02, 10:46:15 d4b88fd543d93c6b63863d28f5c4e716</span><br><span class="line">F release.sh 1795 2017-06-02, 10:45:53 c086eb283e9554bbcd23daf0888e2819</span><br><span class="line">F requirements.txt 42 2017-06-02, 10:44:54 28b314f2f2d2ed79957a7a7e6d3f7c17</span><br><span class="line">F setup.cfg 70 2017-06-02, 10:45:11 b23579970dcedbcaeaaa00636d601335</span><br><span class="line">F setup.py 2377 2017-06-02, 10:44:58 34d63d5143ab02d3db7808321a7f9df4</span><br><span class="line">[root@localhost ~]<span class="hljs-comment"># bypy syncup ./bypy v6/bypy</span></span><br><span class="line">[root@localhost ~]<span class="hljs-comment">#</span></span><br></pre></td></tr></table></figure><h6 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h6><p><code>bypy</code> 同样支持搜索，根据文件名检索，自动递归所有目录</p><figure class="highlight sh hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="hljs-comment"># bypy search release.sh</span></span><br><span class="line">Found:</span><br><span class="line">F /apps/bypy/v6/bypy/release.sh 1795 2017-06-02, 10:45:53 2017-06-02, 10:45:53 c086eb283e9554bbcd23daf0888e2819</span><br></pre></td></tr></table></figure><h6 id="比较本地与百度网盘"><a href="#比较本地与百度网盘" class="headerlink" title="比较本地与百度网盘"></a>比较本地与百度网盘</h6><figure class="highlight sh hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 先删除本地一个文件</span></span><br><span class="line">[root@localhost ~]<span class="hljs-comment"># rm ./bypy/release.sh</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 对比</span></span><br><span class="line">[root@localhost ~]<span class="hljs-comment"># bypy compare v6/bypy ./bypy</span></span><br><span class="line">==== Same files ===</span><br><span class="line">F - MANIFEST.in</span><br><span class="line">... omit ...</span><br><span class="line">F - bypy/monkey.py</span><br><span class="line">F - README.md</span><br><span class="line">==== Different files ===</span><br><span class="line">==== Local only ====</span><br><span class="line">==== Remote only ====</span><br><span class="line">F - release.sh</span><br><span class="line"></span><br><span class="line">Statistics:</span><br><span class="line">--------------------------------</span><br><span class="line">Same: 131</span><br><span class="line">Different: 0</span><br><span class="line">Local only: 0</span><br><span class="line">Remote only: 1</span><br></pre></td></tr></table></figure><p>通过以上可以看到，相同文件131，远程目录多了一个文件。</p><h6 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h6><p><code>bypy</code>支持的操作很多，使用<code>bypy help</code>即可以看到，若要调试，使用以下参数可以打开对应调试信息：</p><ul><li>运行时添加<code>-v</code>参数，会显示进度详情。</li><li>运行时添加<code>-d</code>，会显示一些调试信息。</li><li>运行时添加<code>-ddd</code>，还会会显示HTTP通讯信息（<strong>警告：非常多</strong>）</li></ul><h4 id="数据库备份自动上传到百度网盘"><a href="#数据库备份自动上传到百度网盘" class="headerlink" title="数据库备份自动上传到百度网盘"></a>数据库备份自动上传到百度网盘</h4><p>之前也写过很多关于Mysql备份的文章，如果要详细查看，请打开以下链接：<a href="https://samzong.me/categories/MySQL/">分类MySQL</a></p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> create back script.</span></span><br><span class="line">[root@localhost ~]# touch mysql_back.sh</span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> add executable permissions</span></span><br><span class="line">[root@localhost ~]# chmod +x mysql_back.sh</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# vim mysql_back.sh</span><br><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash">!/bin/bash</span></span><br><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash">  </span></span><br><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> backup mysqldump file to baidu yunPan</span></span><br><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> filepath: /usr/<span class="hljs-built_in">local</span>/bin/mysql_back.sh</span></span><br><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> Author: samzong</span></span><br><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"></span></span><br><span class="line"></span><br><span class="line">function upload_file()&#123;</span><br><span class="line">        TIME=`date "+%Y%m%d%H%M%S"`</span><br><span class="line">        folder="/mysqlbak"</span><br><span class="line">        filename="db_$TIME.sql"</span><br><span class="line">        filePath=$folder/$filename</span><br><span class="line"></span><br><span class="line">        if [ ! -f $filePath ]; then</span><br><span class="line">                echo "[ERROR]["`date +%Y-%m-%d' '%H:%M:%S`"] $folder/$filename not found."</span><br><span class="line">        else</span><br><span class="line">                echo "[INFO]["`date +%Y-%m-%d' '%H:%M:%S`"] $folder/$filename has been found. Start uploading ......"</span><br><span class="line">                bypy upload "$filePath" "v6/mysql_backup/$filename"</span><br><span class="line">                echo "[INFO]["`date +%Y-%m-%d' '%H:%M:%S`"] Uploading end."</span><br><span class="line">        fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash">  <span class="hljs-built_in">set</span> TIME variable</span></span><br><span class="line">TIME=`date "+%Y%m%d%H%M%S"`</span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> backup db ghost to /mysqlbak/</span></span><br><span class="line">mysqldump --single-transaction -h localhost -u ghost_backuser -pbackupPass ghost  &gt; /mysqlbak/db_$TIME.sql</span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> tar sql file</span></span><br><span class="line">tar czvf /mysqlbak/ghost_$TIME.sql.tgz /mysqlbak/ghost_$TIME.sql --remove-files</span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> upload sql file to baidu yunPan.</span></span><br><span class="line">upload_file;</span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> send mial to admin<span class="hljs-string">'mial</span></span></span><br><span class="line">if [ $? -eq 0 ]; then</span><br><span class="line">    echo "ghost SQL dump is successfully. At time: `date` " | mail -s ghost-dump-successfully  samzong.lu@gmail.com</span><br><span class="line">else</span><br><span class="line">    echo " Error Error ghost SQL dump is Error. At time: `date` " | mail -s ghost-dump-error samzong.lu@gmail.com</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h4 id="添加计划任务"><a href="#添加计划任务" class="headerlink" title="添加计划任务"></a>添加计划任务</h4><figure class="highlight sh hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> ~ crontab -e</span><br><span class="line">00 00 * * * sh /usr/<span class="hljs-built_in">local</span>/bin/mysql_back.sh</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近在GitHub上发现一个有趣的项目，&lt;a href=&quot;https://github.com/houtianze/bypy&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;百度网盘Python客户端&lt;/a&gt;(bypy)，主要使用在Linux命令行下，这样很
      
    
    </summary>
    
      <category term="Python" scheme="https://samzong.me/categories/Python/"/>
    
    
      <category term="Python" scheme="https://samzong.me/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>使用国内pypi源加速pip安装</title>
    <link href="https://samzong.me/2017/05/23/fix-pip-install-timeout-inChina/"/>
    <id>https://samzong.me/2017/05/23/fix-pip-install-timeout-inChina/</id>
    <published>2017-05-23T06:30:55.000Z</published>
    <updated>2017-05-23T06:30:55.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/mxb19.png" alt></p><p>在解决将AWS Cloudwatch的监控信息展示在Zabbix上时，需要安装AWS的一个python 工具包boto3，但是在安装过程中，碰到了如上图的错误信息；问题是由于国内网络问题导致连接python库超时，所以将库改为国内</p><h4 id="国内pypi源站点"><a href="#国内pypi源站点" class="headerlink" title="国内pypi源站点"></a>国内pypi源站点</h4><ul><li><a href="http://pypi.douban.com/simple" target="_blank" rel="noopener">http://pypi.douban.com/simple</a>  豆瓣</li><li><a href="http://pypi.hustunique.com/simple" target="_blank" rel="noopener">http://pypi.hustunique.com/simple</a>  华中理工大学</li><li><a href="http://pypi.sdutlinux.org/simple" target="_blank" rel="noopener">http://pypi.sdutlinux.org/simple</a>  山东理工大学</li><li><a href="http://pypi.mirrors.ustc.edu.cn/simple" target="_blank" rel="noopener">http://pypi.mirrors.ustc.edu.cn/simple</a>  中国科学技术大学</li></ul><h4 id="Windows-修改"><a href="#Windows-修改" class="headerlink" title="Windows 修改"></a>Windows 修改</h4><p>编辑 %HOMEPATH%\pip\pip.ini<br><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[global]</span><br><span class="line">index-url = http://pypi.douban.com/simple</span><br></pre></td></tr></table></figure></p><h4 id="Linux-修改"><a href="#Linux-修改" class="headerlink" title="Linux 修改"></a>Linux 修改</h4><p>编辑 ~/.pip/pip.conf ， 如果文件不存在，可以先创建<br><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[global]</span><br><span class="line">index-url = http://pypi.douban.com/simple</span><br></pre></td></tr></table></figure></p><h4 id="修改easy-install-源"><a href="#修改easy-install-源" class="headerlink" title="修改easy_install 源"></a>修改easy_install 源</h4><p>编辑 ~/.pydistutils.cfg<br><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[global]</span><br><span class="line">index-url = http://pypi.douban.com/simple</span><br></pre></td></tr></table></figure></p><h4 id="临时使用"><a href="#临时使用" class="headerlink" title="临时使用"></a>临时使用</h4><p>如果你不想修改源，只是临时使用的话，可以在pip安装时使用-i参数临时指定源站点<br><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip -i http://pypi.douban.com/simple install boto3</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/mxb19.png&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;在解决将AWS Cloudwatch的监控信息展示在Zabbix上时，需要安装AWS的一个python 工具
      
    
    </summary>
    
      <category term="Python" scheme="https://samzong.me/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>HowTo-Skip-Atlassian-Auth-for-SourceTree</title>
    <link href="https://samzong.me/2017/05/20/sourcetree-skipAuth-for-windows/"/>
    <id>https://samzong.me/2017/05/20/sourcetree-skipAuth-for-windows/</id>
    <published>2017-05-20T11:08:45.000Z</published>
    <updated>2017-05-20T11:08:45.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h4><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/eaxem.png" alt></p><p>因为国内的网络的原因，导致我们在首次打开SourceTree时需要验证Atlassian账号，但是Atlassian的注册页面使用requirejs是用了Google的CDN服务，所以无法正常通过验证，如果你有翻墙工具，那么这就没有问题，下面我要讲的方法是在不翻墙的情况下跳过初始化验证。</p><blockquote><p>目前我解决的是在Windows平台上的问题，关于Mac平台，我稍后会更新到文档中。</p></blockquote><h4 id="解决思路"><a href="#解决思路" class="headerlink" title="解决思路"></a>解决思路</h4><p>我的想法是通过增加<code>account</code>信息，让<code>SourceTree</code>跳过验证；经过测试<code>2.0.19</code>及以下版本都支持，但是SourceTree在最新版本2.0.20时可能修订验证方式，所以导致我的这个方式不适用，大家可以在我的百度云盘共享中下载2.0.19，功能上并没发生多少变化。</p><p>链接: <a href="https://pan.baidu.com/s/1qYsHKWs" target="_blank" rel="noopener">https://pan.baidu.com/s/1qYsHKWs</a> 密码: wnc3</p><h4 id="解决步骤"><a href="#解决步骤" class="headerlink" title="解决步骤"></a>解决步骤</h4><h5 id="NET-4-5-2"><a href="#NET-4-5-2" class="headerlink" title=".NET 4.5.2"></a>.NET 4.5.2</h5><p>SourceTree 依赖的.NET环境最低是4.5.2，当然在你安装的过程中，会提示你下载安装，你只需要确认即可，不过这样下载会比较慢，所以建议你使用Offline的形式安装，下面是微软官方下载地址：</p><p><a href="https://www.microsoft.com/en-us/download/confirmation.aspx?id=42642" target="_blank" rel="noopener">https://www.microsoft.com/en-us/download/confirmation.aspx?id=42642</a></p><h5 id="SourceTree"><a href="#SourceTree" class="headerlink" title="SourceTree"></a>SourceTree</h5><p>安装过程中，默认一路“Next”即可，在安装完成之后，我们需要找到SourceTree在LocalAppData中的路径，请打开资源管理窗口，然后输入以下地址：</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%LocalAppData%\Atlassian\SourceTree\</span><br></pre></td></tr></table></figure><blockquote><p>如果路径不存在，创建目录即可</p></blockquote><p>然后将之前百度云盘的文件<code>accounts.json</code>复制到这个位置，它的路径应该是：</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%LocalAppData%\Atlassian\SourceTree\accounts.json</span><br></pre></td></tr></table></figure><p>文件内容：</p><figure class="highlight json hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="hljs-attr">"$id"</span>: <span class="hljs-string">"1"</span>,</span><br><span class="line">    <span class="hljs-attr">"$type"</span>: <span class="hljs-string">"SourceTree.Api.Host.Identity.Model.IdentityAccount, SourceTree.Api.Host.Identity"</span>,</span><br><span class="line">    <span class="hljs-attr">"Authenticate"</span>: <span class="hljs-literal">true</span>,</span><br><span class="line">    <span class="hljs-attr">"HostInstance"</span>: &#123;</span><br><span class="line">      <span class="hljs-attr">"$id"</span>: <span class="hljs-string">"2"</span>,</span><br><span class="line">      <span class="hljs-attr">"$type"</span>: <span class="hljs-string">"SourceTree.Host.Atlassianaccount.AtlassianAccountInstance, SourceTree.Host.AtlassianAccount"</span>,</span><br><span class="line">      <span class="hljs-attr">"Host"</span>: &#123;</span><br><span class="line">        <span class="hljs-attr">"$id"</span>: <span class="hljs-string">"3"</span>,</span><br><span class="line">        <span class="hljs-attr">"$type"</span>: <span class="hljs-string">"SourceTree.Host.Atlassianaccount.AtlassianAccountHost, SourceTree.Host.AtlassianAccount"</span>,</span><br><span class="line">        <span class="hljs-attr">"Id"</span>: <span class="hljs-string">"atlassian account"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="hljs-attr">"BaseUrl"</span>: <span class="hljs-string">"https://id.atlassian.com/"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="hljs-attr">"Credentials"</span>: &#123;</span><br><span class="line">      <span class="hljs-attr">"$id"</span>: <span class="hljs-string">"4"</span>,</span><br><span class="line">      <span class="hljs-attr">"$type"</span>: <span class="hljs-string">"SourceTree.Model.BasicAuthCredentials, SourceTree.Api.Account"</span>,</span><br><span class="line">      <span class="hljs-attr">"Username"</span>: <span class="hljs-string">""</span>,</span><br><span class="line">      <span class="hljs-attr">"Email"</span>: <span class="hljs-literal">null</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="hljs-attr">"IsDefault"</span>: <span class="hljs-literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>添加完成之后，启动SourceTree即可发现已经跳过了验证界面。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/eaxem.png&quot;
      
    
    </summary>
    
      <category term="Git" scheme="https://samzong.me/categories/Git/"/>
    
    
      <category term="Git" scheme="https://samzong.me/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>HowTo-Automatic-EasyBackup-MysqlDB</title>
    <link href="https://samzong.me/2017/05/17/howto-automatic-easyback-mysql-with-crontab/"/>
    <id>https://samzong.me/2017/05/17/howto-automatic-easyback-mysql-with-crontab/</id>
    <published>2017-05-17T10:12:42.000Z</published>
    <updated>2017-05-17T10:12:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>mysql是一个免费、开源中一款非常优秀关系型数据库，在现在的互联网中使用的非常广泛，无论是大型IT项目还是个人开发者的小项目，mysql都能很好的协助人们处理数据库相关的工作，同时数据库对于我们来说是非常重要，所以经常备份数据库是一个基本的操作，这会为你或者你的团队，减少非常多不必要的麻烦。</p><p><code>mysqldump</code>是一个简单而且非常流行的mysql全量备份方式，配合<code>crontab</code>添加自动备份任务，很好的完成了我们针对数据库备份的需求，下面我会通过一个例子来说明如何完成这项操作。</p><blockquote><p>mysqldump是mysql自带的备份工具，所以只要你安装mysql应用包，就无需单独安装mysqldump</p></blockquote><h4 id="测试环境"><a href="#测试环境" class="headerlink" title="测试环境"></a>测试环境</h4><p>我搭建了一个Ghost博客环境，数据库采用是的Mysql，接下来我想在每天00:00执行数据库备份操作，并在备份完成之后，告诉我是否备份成功。</p><p><img src="http://ww1.sinaimg.cn/large/006tKfTcgy1ffogclgk9dj30f00cq3zf.jpg" alt></p><p>所以我们的步骤应该：</p><ol><li>测试备份命令是否可以正常执行</li><li>安装测试命令行邮件工具mailx</li><li>安装计划任务工具Crontab</li><li>编写备份脚本</li><li>添加计划任务</li></ol><h4 id="测试备份命令"><a href="#测试备份命令" class="headerlink" title="测试备份命令"></a>测试备份命令</h4><p>首先你要获得你要备份的数据库对应的select权限，仅需要select权限即可，mysql在管理方面，应该坚持只赋予必须权限的原则。</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; grant select on ghost.* to &apos;ghost_backuser&apos;@&apos;localhost&apos; identified by &apos;backupPass&apos;;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure><p>因为我只在本地执行备份操作，所以我只赋予了<code>localhost</code>的权限，你的权限应该要是执行备份工作的服务器主机信息。</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 创建仅授权本地访问的用户</span><br><span class="line">mysql&gt; create user dbackuser@&apos;localhost&apos;;</span><br><span class="line"># 创建授权所有来源地址的用户</span><br><span class="line">mysql&gt; create user dbackuser@&apos;%&apos;;</span><br><span class="line"># 创建仅授权从特定IP的用户</span><br><span class="line">mysql&gt; create user dbackuser@&apos;192.168.0.230&apos;;</span><br><span class="line"># 创建仅授权从特定IP段访问的用户</span><br><span class="line">mysql&gt; create user dbackuser@&apos;192.168.0.0/23&apos;;</span><br><span class="line"># 创建仅授权从特定域名来访问的用户</span><br><span class="line">mysql&gt; create user dbackuser@&apos;samzong.me&apos;;</span><br></pre></td></tr></table></figure><p>好了，接下来我们测试对应用户是否有权限。</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ mysql -u ghost_backuser -pbackupPass</span><br><span class="line">Warning: Using a password on the command line interface can be insecure.</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 7</span><br><span class="line">Server version: 5.6.35 MySQL Community Server (GPL)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type &apos;help;&apos; or &apos;\h&apos; for help. Type &apos;\c&apos; to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| ghost              |</span><br><span class="line">+--------------------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; use ghost;</span><br><span class="line">Reading table information for completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line"></span><br><span class="line">mysql&gt; select name from users;</span><br><span class="line">+------+</span><br><span class="line">| name |</span><br><span class="line">+------+</span><br><span class="line">| ALEX |</span><br><span class="line">+------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>测试<code>mysqldump</code>备份命令，注意mysqldump备份会锁表，但对于正在工作的数据库，锁表会影响到正常业务，所以我们可以使用<code>–single-transaction</code>参数，不锁表备份。</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ mysqldump -u ghost_backuser -pbackupPass ghost &gt; ghost.bak.sql</span><br><span class="line">Warning: Using a password on the command line interface can be insecure.</span><br><span class="line">mysqldump: Got error: 1044: Access denied for user 'ghost_backuser'@'localhost' to database 'ghost' when using LOCK TABLES</span><br><span class="line">➜  ~ mysqldump -u ghost_backuser -pbackupPass --single-transaction ghost &gt; ghost.bak.sql</span><br><span class="line">Warning: Using a password on the command line interface can be insecure.</span><br><span class="line">➜  ~ ls -lh</span><br><span class="line">total 780K</span><br><span class="line">-rw-r--r-- 1 root   root  780K May 17 16:24 ghost.bak.sql</span><br><span class="line">➜  ~</span><br></pre></td></tr></table></figure><h4 id="安装命令行邮件工具mailx"><a href="#安装命令行邮件工具mailx" class="headerlink" title="安装命令行邮件工具mailx"></a>安装命令行邮件工具mailx</h4><p>安装mailx 在CentOS/RehHat:</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ yum install -y mailx</span><br></pre></td></tr></table></figure><p>测试发送邮件：</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ echo "test" | mail -s "this a test email" samzong.lu@gmail.com</span><br></pre></td></tr></table></figure><p><img src="http://ww2.sinaimg.cn/large/006tKfTcgy1ffogc7wksdj30ms03t3ym.jpg" alt></p><h4 id="安装计划任务工具Crontab"><a href="#安装计划任务工具Crontab" class="headerlink" title="安装计划任务工具Crontab"></a>安装计划任务工具Crontab</h4><p>crontab命令常见于Unix和类Unix的操作系统之中，用于设置周期性被执行的指令。该命令从标准输入设备读取指令，并将其存放于“crontab”文件中。通常，crontab储存的指令被守护进程激活， crond常常在后台运行，每一分钟检查是否有预定的作业需要执行。这类作业一般称为cron jobs。</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ yum install vixie-cron</span><br><span class="line">➜  ~ yum install crontabs</span><br></pre></td></tr></table></figure><blockquote><p>vixie-cron软件包是cron的主程序；</p><p>crontabs软件包是用来安装、卸装、或列举用来驱动 cron 守护进程的表格的程序。</p></blockquote><p>启动crond并设置为开机自启动：</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ service crond start</span><br><span class="line">Starting crond:                                            [  OK  ]</span><br><span class="line">➜  ~ chkconfig crond on</span><br></pre></td></tr></table></figure><p>crontab 基础命令：</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">语　　法：crontab [-u &lt;用户名称&gt;][配置文件] 或 crontab [-u &lt;用户名称&gt;][-elr]</span><br><span class="line"></span><br><span class="line">补充说明：cron是一个常驻服务，它提供计时器的功能，让用户在特定的时间得以执行预设的指令或程序。只要用户会编辑计时器的配置文件，就可以使用计时器的功能。</span><br><span class="line"></span><br><span class="line">配置文件格式：Minute Hour Day Month DayOFWeek Command</span><br><span class="line"></span><br><span class="line">参　　数：</span><br><span class="line">-e 　编辑该用户的计时器设置。</span><br><span class="line">-l 　列出该用户的计时器设置。</span><br><span class="line">-r 　删除该用户的计时器设置。</span><br><span class="line">-u&lt;用户名称&gt; 　指定要设定计时器的用户名称。</span><br></pre></td></tr></table></figure><p>crontab 配置的基本格式：</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">*     * 　 *　  *　  *　　<span class="hljs-built_in">command</span></span><br><span class="line">分　  时　 日　 月　 周　  命令</span><br><span class="line"></span><br><span class="line"> 第1列表示分钟1～59 每分钟用*或者 */1表示</span><br><span class="line"> 第2列表示小时1～23（0表示0点）</span><br><span class="line"> 第3列表示日期1～31</span><br><span class="line"> 第4列表示月份1～12</span><br><span class="line"> 第5列标识号星期0～6（0表示星期天）</span><br><span class="line"> 第6列要运行的命令</span><br></pre></td></tr></table></figure><p>crontab 的一些例子：</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">#每晚的21:30 重启apache</span></span><br><span class="line">30 21 * * * /usr/<span class="hljs-built_in">local</span>/etc/rc.d/lighttpd restart</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">#每月1、10、22日的4 : 45重启apache</span></span><br><span class="line">45 4 1,10,22 * * /usr/<span class="hljs-built_in">local</span>/etc/rc.d/lighttpd restart</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">#每周六、周日的1 : 10重启apache</span></span><br><span class="line">10 1 * * 6,0 /usr/<span class="hljs-built_in">local</span>/etc/rc.d/lighttpd restart</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">#每天18 : 00至23 : 00之间每隔30分钟重启apache</span></span><br><span class="line">0,30 18-23 * * * /usr/<span class="hljs-built_in">local</span>/etc/rc.d/lighttpd restart</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">#每星期六的11 : 00 pm重启apache</span></span><br><span class="line">0 23 * * 6 /usr/<span class="hljs-built_in">local</span>/etc/rc.d/lighttpd restart</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">#晚上11点到早上7点之间，每隔一小时重启apache</span></span><br><span class="line">* 23-7/1 * * * /usr/<span class="hljs-built_in">local</span>/etc/rc.d/lighttpd restart</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">#每一小时重启apache</span></span><br><span class="line">* */1 * * * /usr/<span class="hljs-built_in">local</span>/etc/rc.d/lighttpd restart</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">#每月的4号与每周一到周三的11点重启apache</span></span><br><span class="line">0 11 4 * mon-wed /usr/<span class="hljs-built_in">local</span>/etc/rc.d/lighttpd restart</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">#一月一号的4点重启apache</span></span><br><span class="line">0 4 1 jan * /usr/<span class="hljs-built_in">local</span>/etc/rc.d/lighttpd restart</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">#每半小时同步一下时间</span></span><br><span class="line">*/30 * * * * /usr/sbin/ntpdate 210.72.145.44</span><br></pre></td></tr></table></figure><h4 id="编写备份脚本"><a href="#编写备份脚本" class="headerlink" title="编写备份脚本"></a>编写备份脚本</h4><p>好了，以上我们测试需要用到的各个模块，下面我们要编写备份脚本：</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash">!/bin/bash</span></span><br><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash">  mysqldump scripts.</span></span><br><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> filepath: /usr/<span class="hljs-built_in">local</span>/bin/ghost_sqldump.sh</span></span><br><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> Author: samzong</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash">  <span class="hljs-built_in">set</span> TIME variable</span></span><br><span class="line">TIME=`date "+%Y%m%d%H%M%S"`</span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> backup db ghost to /mysqlbak/</span></span><br><span class="line">mysqldump --single-transaction -h localhost -u ghost_backuser -pbackupPass ghost  &gt; /mysqlbak/ghost_$TIME.sql</span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> tar sql files.</span></span><br><span class="line">tar czvf /mysqlbak/ghost_$TIME.sql.tgz /mysqlbak/ghost_$TIME.sql --remove-files</span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> remove over 7 days sql files.</span></span><br><span class="line">find /mysqlbak/ -mtime +7 -exec rm -f &#123;&#125; \;</span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> send mial to admin<span class="hljs-string">'mial</span></span></span><br><span class="line">if [ $? -eq 0 ]</span><br><span class="line">then</span><br><span class="line">echo "ghost SQL dump is successfully. At time: `date` " | mail -s ghost-dump-successfully  samzong.lu@gmail.com</span><br><span class="line">else</span><br><span class="line">echo " Error Error ghost SQL dump is Error. At time: `date` " | mail -s ghost-dump-error samzong.lu@gmail.com</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>注意脚本中的以下内容要根据你的实际情况修改:</p><ul><li>-h “ “     这是数据库所在的主机</li><li>-u “ “       这是数据库可备份的用户名</li><li>-p” “        备份用户的密码</li></ul><h4 id="添加计划任务"><a href="#添加计划任务" class="headerlink" title="添加计划任务"></a>添加计划任务</h4><p>经过以上测试，已经很好的完成备份脚本，接下来将脚本添加到crontab内，并设置自动执行的时间：</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ crontab -e</span><br><span class="line">00 00 * * * sh /usr/<span class="hljs-built_in">local</span>/bin/ghost_sqldump.sh</span><br></pre></td></tr></table></figure><p>重启crontab服务，并确认crontab已经设置为开机自启动</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ service crond restart</span><br><span class="line">Stopping crond:                                            [  OK  ]</span><br><span class="line">Starting crond:                                            [  OK  ]</span><br><span class="line">➜  ~ chkconfig --list | grep crond</span><br><span class="line">crond          0:off1:off2:on3:on4:on5:on6:off</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;mysql是一个免费、开源中一款非常优秀关系型数据库，在现在的互联网中使用的非常广泛，无论是大型IT项目还是个人开发者的小项目，mysql都能很好的协助人们处理数据库相关的工作，同时数据库对于我们来说是非常重要，所以经常备份数据库是一个基本的操作，这会为你或者你的团队，减少
      
    
    </summary>
    
      <category term="MySQL" scheme="https://samzong.me/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="https://samzong.me/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Wannacry蠕虫病毒事件及修复方案</title>
    <link href="https://samzong.me/2017/05/15/fix-Wannacry/"/>
    <id>https://samzong.me/2017/05/15/fix-Wannacry/</id>
    <published>2017-05-15T03:05:23.000Z</published>
    <updated>2017-05-15T03:05:23.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/3d0jo.png" alt></p><h3 id="事件背景"><a href="#事件背景" class="headerlink" title="事件背景"></a>事件背景</h3><p>5月12日晚， WannaCry 蠕虫病毒在全球大肆爆发。据BBC、CNN等媒体报道，恶意攻击者利用 NSA（美国国家安全局）泄露的 Windows 0day 利用工具对99个国家实施了超过75000次攻击，主要影响SMB和RDP服务，主要影响了137、138、139、445端口。</p><p>目前已知已知的Windows版本包括但不限于一下都受影响：</p><ul><li>Windows NT</li><li>Windows 2000</li><li>Windows XP</li><li>Windows 2003</li><li>Windows Vista</li><li>Windows 7</li><li>Windows 8</li><li>Windows 10</li><li>Windows 2008</li><li>Windows 2008 R2</li><li>Windows Server 2012 SP0</li></ul><p>勒索者源头来自暗网，攻击具备兼容性、多语言支持，多个行业受到影响，国内高校网络系统沦为感染重灾区。据有关机构统计，目前国内每天有数万台机器遭到该蠕虫病毒袭击，国内的ATM机、火车站、自助终端、邮政、医院、政府办事终端、视频监控都可能遭受攻击。据报道，今日全国多地的中石油加油站无法进行网络支付，只能进行现金支付。中石油有关负责人表示，怀疑受到病毒攻击，具体情况还在核查。而截至目前，一些公安系统已经遭到入侵。</p><p>如果你也遇到了这样的问题，请不要担心，我在下面给出了如何修复这个漏洞的建议。</p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/9y7cc.jpg" alt></p><h3 id="什么是比特币蠕虫病毒？"><a href="#什么是比特币蠕虫病毒？" class="headerlink" title="什么是比特币蠕虫病毒？"></a>什么是比特币蠕虫病毒？</h3><p>这次攻击的始作俑者是一款名为“WannaCry”（中文名：想哭）的勒索病毒，带有加密功能，它利用 Windows 在 445 端口的安全漏洞潜入电脑并对多种文件类型加密并添加后缀(.onion)使用户无法打开，用户电脑存在文档被加密的情况，攻击者称需支付比特币解锁。(比特币是一种全球通用的互联网加密货币)</p><h3 id="漏洞验证"><a href="#漏洞验证" class="headerlink" title="漏洞验证"></a>漏洞验证</h3><ol><li><p>使用<code>Win</code>+<code>R</code>按键打开运行窗口，输入cmd，进入命令行工具，然后输入<code>netstat -an</code> 查看是否开放了对应的端口。</p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/3m1jm.png" alt></p><p>上图中的服务器就是开放了445端口，这有很大的风险可能会WannaCry 蠕虫病毒被攻击到，所以我们应该关掉对应端口，并修复漏洞。</p><h3 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h3><ol><li>目前微软已发布补丁MS17-010修复了“永恒之蓝”攻击的系统漏洞，请尽快为电脑安装此补丁，网址为<a href="https://laod.cn/go.php?url=https://technet.microsoft.com/zh-cn/library/security/MS17-010" target="_blank" rel="noopener">https://technet.microsoft.com/zh-cn/library/security/MS17-010</a></li><li>对于XP、2003等微软已不再提供安全更新的机器，推荐使用360“NSA武器库免疫工具”检测系统是否存在漏洞，并关闭受到漏洞影响的端口，可以避免遭到勒索软件等病毒的侵害，可以在360电脑安全管家中找到。</li><li>开启系统防火墙，利用系统防火墙的“高级设置”阻止外部对 445 端口进的访问（存在一定影响，该操作会影响使用 445 端口的服务）。</li></ol></li></ol><h3 id="修复脚本"><a href="#修复脚本" class="headerlink" title="修复脚本"></a>修复脚本</h3><p>如果以上方式都不能修复漏洞，大家可以使用我以下的批处理脚本文件来尝试关闭端口及服务，批处理禁用该漏洞可能利用到的端口，全版本通用，右键管理员启动即可，注意这需要打开Windows的防火墙。</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">net stop SCardSvr</span><br><span class="line">net stop SCPolicySvc</span><br><span class="line">sc config SCardSvr start=disabled</span><br><span class="line">sc config SCPolicySvc start=disabled</span><br><span class="line">net start MpsSvc</span><br><span class="line">sc config MpsSvc start=auto</span><br><span class="line">netsh advfirewall <span class="hljs-built_in">set</span> allprofiles state on</span><br><span class="line">netsh advfirewall firewall add rule name=<span class="hljs-string">"deny udp 137"</span> dir=<span class="hljs-keyword">in</span> protocol=udp localport=137 action=block</span><br><span class="line">netsh advfirewall firewall add rule name=<span class="hljs-string">"deny tcp 137"</span> dir=<span class="hljs-keyword">in</span> protocol=tcp localport=137 action=block</span><br><span class="line">netsh advfirewall firewall add rule name=<span class="hljs-string">"deny udp 138"</span> dir=<span class="hljs-keyword">in</span> protocol=udp localport=138 action=block</span><br><span class="line">netsh advfirewall firewall add rule name=<span class="hljs-string">"deny tcp 138"</span> dir=<span class="hljs-keyword">in</span> protocol=tcp localport=138 action=block</span><br><span class="line">netsh advfirewall firewall add rule name=<span class="hljs-string">"deny udp 139"</span> dir=<span class="hljs-keyword">in</span> protocol=udp localport=139 action=block</span><br><span class="line">netsh advfirewall firewall add rule name=<span class="hljs-string">"deny tcp 139"</span> dir=<span class="hljs-keyword">in</span> protocol=tcp localport=139 action=block</span><br><span class="line">netsh advfirewall firewall add rule name=<span class="hljs-string">"deny udp 445"</span> dir=<span class="hljs-keyword">in</span> protocol=udp localport=445 action=block</span><br><span class="line">netsh advfirewall firewall add rule name=<span class="hljs-string">"deny tcp 445"</span> dir=<span class="hljs-keyword">in</span> protocol=tcp localport=445 action=block</span><br><span class="line">pause</span><br></pre></td></tr></table></figure><p>我已经将脚本上传到百度云盘中，大家可以自行下载运行，注意解压缩Zip包之后的fix_WannaCry.bat</p><p>下载链接：<a href="https://pan.baidu.com/s/1gfceNRH" target="_blank" rel="noopener">https://pan.baidu.com/s/1gfceNRH</a></p><h3 id="添加防火规则"><a href="#添加防火规则" class="headerlink" title="添加防火规则"></a>添加防火规则</h3><ol><li><p>打开控制面板中的Windows防火墙，并保证防火墙处于启用状态；</p></li><li><p>打开防火墙的高级设置；</p></li><li><p>在“入站规则”中新建一条规则，本地端口号选择445，操作选择阻止连接。</p><p><img src="https://pic3.zhimg.com/v2-85f14330cdba1fbf89369b26b9e48f52_b.png" alt></p><p><img src="https://pic2.zhimg.com/v2-1bbe08395ec8ef8d0e2028cbccb01055_b.png" alt></p></li></ol><h3 id="手动导入安全策略"><a href="#手动导入安全策略" class="headerlink" title="手动导入安全策略"></a>手动导入安全策略</h3><p>下载策略文件</p><p><a href="https://share.weiyun.com/15b7bbd3f86c493a66721dd948a81c54" target="_blank" rel="noopener">https://share.weiyun.com/15b7bbd3f86c493a66721dd948a81c54</a></p><p>打开控制面板–管理工具-本地安全策略–IP安全策略 –&gt;所有任务–&gt;导入策略：</p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/hj9f4.jpg" alt></p><p>或者，通过<code>Win</code>+<code>R</code>，输入<code>gpedit.msc</code></p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/9vsqx.jpg" alt></p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/tosjk.jpg" alt></p><p><img src="/Users/Alex/Library/Containers/com.tencent.qq/Data/Library/Application Support/QQ/Users/573578678/QQ/Temp.db/539E3FA1-2A85-4B41-95BC-C32B82A5DA0D.png" alt="539E3FA1-2A85-4B41-95BC-C32B82A5DA0D"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/3d0jo.png&quot; alt&gt;&lt;/p&gt;
&lt;h3 id=&quot;事件背景&quot;&gt;&lt;a href=&quot;#事件背景&quot; class=&quot;headerlink&quot; title=&quot;事
      
    
    </summary>
    
      <category term="Windows" scheme="https://samzong.me/categories/Windows/"/>
    
    
  </entry>
  
  <entry>
    <title>CentOS增加新硬盘给根文件系统扩容</title>
    <link href="https://samzong.me/2017/04/18/qvfwlg9yq/"/>
    <id>https://samzong.me/2017/04/18/qvfwlg9yq/</id>
    <published>2017-04-18T09:48:57.000Z</published>
    <updated>2017-04-21T05:12:33.000Z</updated>
    
    <content type="html"><![CDATA[<p>由于刚开始做磁盘空间规划时，失误给根分区分配磁盘较小，导致后续实验环境无法进行，所以在经过研究后，决定尝试增加根分区的磁盘空间，注意这仅适用于创建在LVM上的文件系统。</p><h3 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h3><ul><li>Parallels Desktop 12</li><li>CentOS 6.9</li><li>根分区空间 6.5GB</li><li>已使用 5.8GB</li><li>预计 增加12G 磁盘空间</li></ul><a id="more"></a><h3 id="增加一块物理磁盘"><a href="#增加一块物理磁盘" class="headerlink" title="增加一块物理磁盘"></a>增加一块物理磁盘</h3><p>Parallels Desktop 不能在线增加磁盘，所以要先将VM关闭，然后添加：<br><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/m5e1d.jpg" alt><br>增加12G的磁盘<br><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/prgyd.jpg" alt></p><p>然后启动VM，这时可以通过<code>fdisk -l</code>查看当前已经增加了一块12G的磁盘</p><p><img src="https://samzong.oss-cn-shenzhen.aliyuncs.com/blog/tat9r.jpg" alt></p><h3 id="格式化磁盘并加入到VGroup组内"><a href="#格式化磁盘并加入到VGroup组内" class="headerlink" title="格式化磁盘并加入到VGroup组内"></a>格式化磁盘并加入到VGroup组内</h3><h4 id="查看当前pvdisplay磁盘列表，将-dev-sdb创建pv块"><a href="#查看当前pvdisplay磁盘列表，将-dev-sdb创建pv块" class="headerlink" title="查看当前pvdisplay磁盘列表，将/dev/sdb创建pv块"></a>查看当前<code>pvdisplay</code>磁盘列表，将<code>/dev/sdb</code>创建pv块</h4><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">[root@centos ~]# pvdisplay</span><br><span class="line">  --- Physical volume ---</span><br><span class="line">  PV Name               /dev/sda2</span><br><span class="line">  VG Name               vg_hadoop01</span><br><span class="line">  PV Size               7.51 GiB / not usable 3.00 MiB</span><br><span class="line">  Allocatable           yes (but full)</span><br><span class="line">  PE Size               4.00 MiB</span><br><span class="line">  Total PE              1922</span><br><span class="line">  Free PE               0</span><br><span class="line">  Allocated PE          1922</span><br><span class="line">  PV UUID               MUCrDa-eJpZ-EXwE-YwwM-S2Az-p2m7-K9q3Fo</span><br><span class="line"></span><br><span class="line">[root@centos ~]# pvcreate /dev/sdb</span><br><span class="line">  Physical volume "/dev/sdb" successfully created</span><br><span class="line">[root@centos ~]# pvdisplay</span><br><span class="line">  --- Physical volume ---</span><br><span class="line">  PV Name               /dev/sda2</span><br><span class="line">  VG Name               vg_hadoop01</span><br><span class="line">  PV Size               7.51 GiB / not usable 3.00 MiB</span><br><span class="line">  Allocatable           yes (but full)</span><br><span class="line">  PE Size               4.00 MiB</span><br><span class="line">  Total PE              1922</span><br><span class="line">  Free PE               0</span><br><span class="line">  Allocated PE          1922</span><br><span class="line">  PV UUID               MUCrDa-eJpZ-EXwE-YwwM-S2Az-p2m7-K9q3Fo</span><br><span class="line"></span><br><span class="line">  --- Physical volume ---</span><br><span class="line">  PV Name               /dev/sdb</span><br><span class="line">  VG Name               vg_hadoop01</span><br><span class="line">  PV Size               12.00 GiB / not usable 4.00 MiB</span><br><span class="line">  Allocatable           yes</span><br><span class="line">  PE Size               4.00 MiB</span><br><span class="line">  Total PE              3071</span><br><span class="line">  Free PE               3071</span><br><span class="line">  Allocated PE          0</span><br><span class="line">  PV UUID               XTpaBR-512W-vQIV-fwwz-So7L-ZCa3-yjDccQ</span><br></pre></td></tr></table></figure><h4 id="查看当前vgdisplayVGroup组，将-dev-sdb加入根目录所在VGroup"><a href="#查看当前vgdisplayVGroup组，将-dev-sdb加入根目录所在VGroup" class="headerlink" title="查看当前vgdisplayVGroup组，将/dev/sdb加入根目录所在VGroup"></a>查看当前<code>vgdisplay</code>VGroup组，将<code>/dev/sdb</code>加入根目录所在VGroup</h4><figure class="highlight sh hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">[root@centos ~]<span class="hljs-comment"># vgdisplay</span></span><br><span class="line">  --- Volume group ---</span><br><span class="line">  VG Name               vg_hadoop01</span><br><span class="line">  System ID</span><br><span class="line">  Format                lvm2</span><br><span class="line">  Metadata Areas        1</span><br><span class="line">  Metadata Sequence No  3</span><br><span class="line">  VG Access             <span class="hljs-built_in">read</span>/write</span><br><span class="line">  VG Status             resizable</span><br><span class="line">  MAX LV                0</span><br><span class="line">  Cur LV                2</span><br><span class="line">  Open LV               2</span><br><span class="line">  Max PV                0</span><br><span class="line">  Cur PV                1</span><br><span class="line">  Act PV                1</span><br><span class="line">  VG Size               7.51 GiB</span><br><span class="line">  PE Size               4.00 MiB</span><br><span class="line">  Total PE              1922</span><br><span class="line">  Alloc PE / Size       1922 / 7.51 GiB</span><br><span class="line">  Free  PE / Size       0 / 0</span><br><span class="line">  VG UUID               szQ4fH-Sr1Z-V6c2-KVMp-ZUik-oUDP-rU8dQS</span><br><span class="line"></span><br><span class="line">[root@centos ~]<span class="hljs-comment"># vgextend vg_hadoop01 /dev/sdb</span></span><br><span class="line">  Volume group <span class="hljs-string">"vg_hadoop01"</span> successfully extended</span><br><span class="line">[root@centos ~]<span class="hljs-comment"># vgdisplay</span></span><br><span class="line">  --- Volume group ---</span><br><span class="line">  VG Name               vg_hadoop01</span><br><span class="line">  System ID</span><br><span class="line">  Format                lvm2</span><br><span class="line">  Metadata Areas        2</span><br><span class="line">  Metadata Sequence No  4</span><br><span class="line">  VG Access             <span class="hljs-built_in">read</span>/write</span><br><span class="line">  VG Status             resizable</span><br><span class="line">  MAX LV                0</span><br><span class="line">  Cur LV                2</span><br><span class="line">  Open LV               2</span><br><span class="line">  Max PV                0</span><br><span class="line">  Cur PV                2</span><br><span class="line">  Act PV                2</span><br><span class="line">  VG Size               19.50 GiB</span><br><span class="line">  PE Size               4.00 MiB</span><br><span class="line">  Total PE              4993</span><br><span class="line">  Alloc PE / Size       1922 / 7.51 GiB</span><br><span class="line">  Free  PE / Size       3071 / 12.00 GiB</span><br><span class="line">  VG UUID               szQ4fH-Sr1Z-V6c2-KVMp-ZUik-oUDP-rU8dQS</span><br></pre></td></tr></table></figure><h4 id="查看lvdisplay根卷的名称，将磁盘加入根卷的LV"><a href="#查看lvdisplay根卷的名称，将磁盘加入根卷的LV" class="headerlink" title="查看lvdisplay根卷的名称，将磁盘加入根卷的LV"></a>查看<code>lvdisplay</code>根卷的名称，将磁盘加入根卷的LV</h4><figure class="highlight gams hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">[root@centos ~]# lvdisplay</span><br><span class="line">  --- Logical volume ---</span><br><span class="line">  LV Path                /dev/vg_hadoop01/lv_root</span><br><span class="line">  LV Name                lv_root</span><br><span class="line">  VG Name                vg_hadoop01</span><br><span class="line">  LV UUID                tJDetu-Theq-BQ5g<span class="hljs-number">-3</span>ZFe-Gan7<span class="hljs-number">-1</span>SSv-OHeYrH</span><br><span class="line">  LV Write Access        read/write</span><br><span class="line">  LV Creation host, time hadoop01, <span class="hljs-number">2017</span><span class="hljs-number">-04</span><span class="hljs-number">-18</span> <span class="hljs-number">07</span>:<span class="hljs-number">09</span>:<span class="hljs-number">58</span> +<span class="hljs-number">0800</span></span><br><span class="line">  LV Status              available</span><br><span class="line">  # open                 <span class="hljs-number">1</span></span><br><span class="line">  LV Size                <span class="hljs-number">6.71</span> GiB</span><br><span class="line">  Current <span class="hljs-keyword">LE</span>             <span class="hljs-number">1718</span></span><br><span class="line">  Segments               <span class="hljs-number">1</span></span><br><span class="line">  Allocation             inherit</span><br><span class="line">  Read ahead sectors     auto</span><br><span class="line">  - currently <span class="hljs-keyword">set</span> to     <span class="hljs-comment">256</span></span><br><span class="line">  Block <span class="hljs-comment">device           253:0</span></span><br><span class="line"></span><br><span class="line">  --- Logical <span class="hljs-comment">volume ---</span></span><br><span class="line">  LV <span class="hljs-comment">Path</span>                /dev/<span class="hljs-comment">vg_hadoop01</span>/lv_swap</span><br><span class="line">  LV Name                lv_swap</span><br><span class="line">  VG Name                vg_hadoop01</span><br><span class="line">  LV UUID                D4K7I6-tPO0-HMbC-VWkR<span class="hljs-number">-2</span>HV4-WjAe-M82wYq</span><br><span class="line">  LV Write Access        read/<span class="hljs-comment">write</span></span><br><span class="line">  LV <span class="hljs-comment">Creation host, time hadoop01, 2017-04-18 07:09:59 +0800</span></span><br><span class="line">  LV <span class="hljs-comment">Status              available</span></span><br><span class="line">  # open                 <span class="hljs-comment">1</span></span><br><span class="line">  LV <span class="hljs-comment">Size                816.00 MiB</span></span><br><span class="line">  Current <span class="hljs-comment">LE             204</span></span><br><span class="line">  Segments               <span class="hljs-comment">1</span></span><br><span class="line">  Allocation             <span class="hljs-comment">inherit</span></span><br><span class="line">  Read <span class="hljs-comment">ahead sectors     auto</span></span><br><span class="line">  - currently <span class="hljs-comment">set to     256</span></span><br><span class="line">  Block <span class="hljs-comment">device           253:1</span></span><br><span class="line"></span><br><span class="line">[root@centos ~<span class="hljs-comment">]# lvextend -l +100%FREE</span> /dev/<span class="hljs-comment">vg_hadoop01</span>/lv_root</span><br><span class="line">  Size of logical volume vg_hadoop01/<span class="hljs-comment">lv_root changed from 6.71 GiB (1718 extents) to 18.71 GiB (4789 extents).</span></span><br><span class="line">  Logical <span class="hljs-comment">volume lv_root successfully resized.</span></span><br><span class="line">[root@centos ~<span class="hljs-comment">]# lvdisplay</span></span><br><span class="line">  --- Logical <span class="hljs-comment">volume ---</span></span><br><span class="line">  LV <span class="hljs-comment">Path</span>                /dev/<span class="hljs-comment">vg_hadoop01</span>/lv_root</span><br><span class="line">  LV Name                lv_root</span><br><span class="line">  VG Name                vg_hadoop01</span><br><span class="line">  LV UUID                tJDetu-Theq-BQ5g<span class="hljs-number">-3</span>ZFe-Gan7<span class="hljs-number">-1</span>SSv-OHeYrH</span><br><span class="line">  LV Write Access        read/<span class="hljs-comment">write</span></span><br><span class="line">  LV <span class="hljs-comment">Creation host, time hadoop01, 2017-04-18 07:09:58 +0800</span></span><br><span class="line">  LV <span class="hljs-comment">Status              available</span></span><br><span class="line">  # open                 <span class="hljs-comment">1</span></span><br><span class="line">  LV <span class="hljs-comment">Size                18.71 GiB</span></span><br><span class="line">  Current <span class="hljs-comment">LE             4789</span></span><br><span class="line">  Segments               <span class="hljs-comment">2</span></span><br><span class="line">  Allocation             <span class="hljs-comment">inherit</span></span><br><span class="line">  Read <span class="hljs-comment">ahead sectors     auto</span></span><br><span class="line">  - currently <span class="hljs-comment">set to     256</span></span><br><span class="line">  Block <span class="hljs-comment">device           253:0</span></span><br><span class="line"></span><br><span class="line">  --- Logical <span class="hljs-comment">volume ---</span></span><br><span class="line">  LV <span class="hljs-comment">Path</span>                /dev/<span class="hljs-comment">vg_hadoop01</span>/lv_swap</span><br><span class="line">  LV Name                lv_swap</span><br><span class="line">  VG Name                vg_hadoop01</span><br><span class="line">  LV UUID                D4K7I6-tPO0-HMbC-VWkR<span class="hljs-number">-2</span>HV4-WjAe-M82wYq</span><br><span class="line">  LV Write Access        read/<span class="hljs-comment">write</span></span><br><span class="line">  LV <span class="hljs-comment">Creation host, time hadoop01, 2017-04-18 07:09:59 +0800</span></span><br><span class="line">  LV <span class="hljs-comment">Status              available</span></span><br><span class="line">  # open                 <span class="hljs-comment">1</span></span><br><span class="line">  LV <span class="hljs-comment">Size                816.00 MiB</span></span><br><span class="line">  Current <span class="hljs-comment">LE             204</span></span><br><span class="line">  Segments               <span class="hljs-comment">1</span></span><br><span class="line">  Allocation             <span class="hljs-comment">inherit</span></span><br><span class="line">  Read <span class="hljs-comment">ahead sectors     auto</span></span><br><span class="line">  - currently <span class="hljs-comment">set to     256</span></span><br><span class="line">  Block <span class="hljs-comment">device           253:1</span></span><br></pre></td></tr></table></figure><h3 id="更新磁盘分区表"><a href="#更新磁盘分区表" class="headerlink" title="更新磁盘分区表"></a>更新磁盘分区表</h3><p>当你增加完成之后，这时使用<code>df -h</code>查看的磁盘空间仍然没有变化，因为我们还需要将根卷的分区表刷新。</p><h4 id="使用resize2fs刷新根卷信息"><a href="#使用resize2fs刷新根卷信息" class="headerlink" title="使用resize2fs刷新根卷信息"></a>使用<code>resize2fs</code>刷新根卷信息</h4><figure class="highlight lsl hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@centos ~]# resize2fs /dev/vg_hadoop01/lv_root</span><br><span class="line">resize2fs <span class="hljs-number">1.41</span><span class="hljs-number">.12</span> (<span class="hljs-number">17</span>-May<span class="hljs-number">-2010</span>)</span><br><span class="line">Filesystem at /dev/vg_hadoop01/lv_root is mounted on /; on-line resizing required</span><br><span class="line">old desc_blocks = <span class="hljs-number">1</span>, new_desc_blocks = <span class="hljs-number">2</span></span><br><span class="line">Performing an on-line resize of /dev/vg_hadoop01/lv_root to <span class="hljs-number">4903936</span> (<span class="hljs-number">4</span>k) blocks.</span><br><span class="line">The filesystem on /dev/vg_hadoop01/lv_root is now <span class="hljs-number">4903936</span> blocks long.</span><br><span class="line"></span><br><span class="line">[root@centos ~]# df -h</span><br><span class="line">Filesystem            Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/mapper/vg_hadoop01-lv_root</span><br><span class="line">                       <span class="hljs-number">19</span>G  <span class="hljs-number">5.8</span>G   <span class="hljs-number">12</span>G  <span class="hljs-number">33</span>% /</span><br><span class="line">tmpfs                 <span class="hljs-number">244</span>M     <span class="hljs-number">0</span>  <span class="hljs-number">244</span>M   <span class="hljs-number">0</span>% /dev/shm</span><br><span class="line">/dev/sda1             <span class="hljs-number">477</span>M   <span class="hljs-number">52</span>M  <span class="hljs-number">400</span>M  <span class="hljs-number">12</span>% /boot</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于刚开始做磁盘空间规划时，失误给根分区分配磁盘较小，导致后续实验环境无法进行，所以在经过研究后，决定尝试增加根分区的磁盘空间，注意这仅适用于创建在LVM上的文件系统。&lt;/p&gt;
&lt;h3 id=&quot;实验环境&quot;&gt;&lt;a href=&quot;#实验环境&quot; class=&quot;headerlink&quot; title=&quot;实验环境&quot;&gt;&lt;/a&gt;实验环境&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Parallels Desktop 12&lt;/li&gt;
&lt;li&gt;CentOS 6.9&lt;/li&gt;
&lt;li&gt;根分区空间 6.5GB&lt;/li&gt;
&lt;li&gt;已使用 5.8GB&lt;/li&gt;
&lt;li&gt;预计 增加12G 磁盘空间&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="CentOS" scheme="https://samzong.me/categories/CentOS/"/>
    
    
      <category term="LVM" scheme="https://samzong.me/tags/LVM/"/>
    
  </entry>
  
  <entry>
    <title>HowTo Install GitLab</title>
    <link href="https://samzong.me/2017/04/13/howto-install-gitlab/"/>
    <id>https://samzong.me/2017/04/13/howto-install-gitlab/</id>
    <published>2017-04-13T03:18:17.000Z</published>
    <updated>2017-04-21T05:12:57.000Z</updated>
    
    <content type="html"><![CDATA[<p>目前最为主流的在线Git版本控制系统可以说是非GitHub莫属，对于个人开发者和开源项目可以直接选择GitHub作为Git版本控制系统即可，但是，对于企业内部开发管理的Git版本控制系统，在对保密性有高要求时GitHub就不合适了，这时GitLab作为一个可以完全搭建在企业内部的Git版本控制系统，而且基本囊括了GitHub的所有功能。</p><h4 id="目前GitLab已经整合的功能"><a href="#目前GitLab已经整合的功能" class="headerlink" title="目前GitLab已经整合的功能"></a>目前GitLab已经整合的功能</h4><ol><li>Repository access</li><li>Administration</li><li>Issues</li><li>Forks</li><li>Code review</li><li>Wiki</li><li>Merge Requests</li><li>Web Editor</li></ol><h4 id="测试环境"><a href="#测试环境" class="headerlink" title="测试环境"></a>测试环境</h4><ul><li>2 core 4GB</li><li>50GB HDD</li><li>CentOS 6.8</li><li>Gitlab</li></ul><h4 id="安装需求"><a href="#安装需求" class="headerlink" title="安装需求"></a>安装需求</h4><p>关于GitLab的安装需求，主要是针对用户量然后评估出服务器及相关资源的配置，<a href="https://docs.gitlab.com.cn/ce/install/requirements.html" target="_blank" rel="noopener">查看</a></p><h3 id="GitLab-安装"><a href="#GitLab-安装" class="headerlink" title="GitLab 安装"></a><strong>GitLab 安装</strong></h3><h4 id="安装配置依赖项"><a href="#安装配置依赖项" class="headerlink" title="安装配置依赖项"></a>安装配置依赖项</h4><figure class="highlight routeros hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install curl openssh-server openssh-clients postfix cronie</span><br><span class="line">sudo<span class="hljs-built_in"> service </span>postfix start</span><br><span class="line">sudo chkconfig postfix on</span><br><span class="line">sudo lokkit -s http -s ssh</span><br></pre></td></tr></table></figure><h4 id="添加GitLab仓库-并安装到服务器上"><a href="#添加GitLab仓库-并安装到服务器上" class="headerlink" title="添加GitLab仓库,并安装到服务器上"></a>添加GitLab仓库,并安装到服务器上</h4><figure class="highlight vim hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -sS http://packages.gitlab.<span class="hljs-keyword">cc</span>/install/gitlab-<span class="hljs-keyword">ce</span>/script.rpm.<span class="hljs-keyword">sh</span> | sudo bash</span><br><span class="line">sudo yum install gitlab-<span class="hljs-keyword">ce</span></span><br></pre></td></tr></table></figure><h4 id="启动GitLab并初始化"><a href="#启动GitLab并初始化" class="headerlink" title="启动GitLab并初始化"></a>启动GitLab并初始化</h4><figure class="highlight ebnf hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">sudo gitlab-ctl reconfigure</span></span><br></pre></td></tr></table></figure><p>默认登录账号是：<strong>root</strong> ，你可以在首次打开时设置密码。</p><h3 id="GitLab-初始化"><a href="#GitLab-初始化" class="headerlink" title="GitLab 初始化"></a><strong>GitLab 初始化</strong></h3><h4 id="开机自启动"><a href="#开机自启动" class="headerlink" title="开机自启动"></a>开机自启动</h4><figure class="highlight awk hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi <span class="hljs-regexp">/etc/</span>rc.local</span><br><span class="line"><span class="hljs-regexp">/opt/gi</span>tlab<span class="hljs-regexp">/bin/gi</span>tlab-ctl start</span><br></pre></td></tr></table></figure><h4 id="GitLab-配置文件"><a href="#GitLab-配置文件" class="headerlink" title="GitLab 配置文件"></a>GitLab 配置文件</h4><figure class="highlight awk hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-regexp">/etc/gi</span>tlab<span class="hljs-regexp">/gitlab.rb</span></span><br></pre></td></tr></table></figure><h4 id="SMTP-邮箱配置"><a href="#SMTP-邮箱配置" class="headerlink" title="SMTP 邮箱配置"></a>SMTP 邮箱配置</h4><p>如果想使用SMTP代替sendmail来发送邮件，应该在gitlab.rb中启用对应的配置，然后运行<code>gitlab-ctl reconfigure</code>使修改生效。</p><h5 id="QQ企业邮箱配置示例"><a href="#QQ企业邮箱配置示例" class="headerlink" title="QQ企业邮箱配置示例"></a>QQ企业邮箱配置示例</h5><figure class="highlight prolog hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">gitlab_rails[<span class="hljs-string">'smtp_enable'</span>] = true</span><br><span class="line">gitlab_rails[<span class="hljs-string">'smtp_address'</span>] = <span class="hljs-string">"smtp.exmail.qq.com"</span></span><br><span class="line">gitlab_rails[<span class="hljs-string">'smtp_port'</span>] = <span class="hljs-number">465</span></span><br><span class="line">gitlab_rails[<span class="hljs-string">'smtp_user_name'</span>] = <span class="hljs-string">"xxxx@xx.com"</span></span><br><span class="line">gitlab_rails[<span class="hljs-string">'smtp_password'</span>] = <span class="hljs-string">"password"</span></span><br><span class="line">gitlab_rails[<span class="hljs-string">'smtp_authentication'</span>] = <span class="hljs-string">"login"</span></span><br><span class="line">gitlab_rails[<span class="hljs-string">'smtp_enable_starttls_auto'</span>] = true</span><br><span class="line">gitlab_rails[<span class="hljs-string">'smtp_tls'</span>] = true</span><br><span class="line">gitlab_rails[<span class="hljs-string">'gitlab_email_from'</span>] = <span class="hljs-string">'xxxx@xx.com'</span></span><br></pre></td></tr></table></figure><h5 id="Gmail邮箱配置示例"><a href="#Gmail邮箱配置示例" class="headerlink" title="Gmail邮箱配置示例"></a>Gmail邮箱配置示例</h5><figure class="highlight prolog hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">gitlab_rails[<span class="hljs-string">'smtp_enable'</span>] = true</span><br><span class="line">gitlab_rails[<span class="hljs-string">'smtp_address'</span>] = <span class="hljs-string">"smtp.gmail.com"</span></span><br><span class="line">gitlab_rails[<span class="hljs-string">'smtp_port'</span>] = <span class="hljs-number">587</span></span><br><span class="line">gitlab_rails[<span class="hljs-string">'smtp_user_name'</span>] = <span class="hljs-string">"my.email@gmail.com"</span></span><br><span class="line">gitlab_rails[<span class="hljs-string">'smtp_password'</span>] = <span class="hljs-string">"my-gmail-password"</span></span><br><span class="line">gitlab_rails[<span class="hljs-string">'smtp_domain'</span>] = <span class="hljs-string">"smtp.gmail.com"</span></span><br><span class="line">gitlab_rails[<span class="hljs-string">'smtp_authentication'</span>] = <span class="hljs-string">"login"</span></span><br><span class="line">gitlab_rails[<span class="hljs-string">'smtp_enable_starttls_auto'</span>] = true</span><br><span class="line">gitlab_rails[<span class="hljs-string">'smtp_tls'</span>] = false</span><br><span class="line">gitlab_rails[<span class="hljs-string">'smtp_openssl_verify_mode'</span>] = <span class="hljs-string">'peer'</span></span><br></pre></td></tr></table></figure><h5 id="Outlook邮箱配置示例"><a href="#Outlook邮箱配置示例" class="headerlink" title="Outlook邮箱配置示例"></a>Outlook邮箱配置示例</h5><figure class="highlight prolog hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">gitlab_rails[<span class="hljs-string">'smtp_enable'</span>] = true</span><br><span class="line">gitlab_rails[<span class="hljs-string">'smtp_address'</span>] = <span class="hljs-string">"smtp-mail.outlook.com"</span></span><br><span class="line">gitlab_rails[<span class="hljs-string">'smtp_port'</span>] = <span class="hljs-number">587</span></span><br><span class="line">gitlab_rails[<span class="hljs-string">'smtp_user_name'</span>] = <span class="hljs-string">"username@outlook.com"</span></span><br><span class="line">gitlab_rails[<span class="hljs-string">'smtp_password'</span>] = <span class="hljs-string">"password"</span></span><br><span class="line">gitlab_rails[<span class="hljs-string">'smtp_domain'</span>] = <span class="hljs-string">"smtp-mail.outlook.com"</span></span><br><span class="line">gitlab_rails[<span class="hljs-string">'smtp_authentication'</span>] = <span class="hljs-string">"login"</span></span><br><span class="line">gitlab_rails[<span class="hljs-string">'smtp_enable_starttls_auto'</span>] = true</span><br><span class="line">gitlab_rails[<span class="hljs-string">'smtp_openssl_verify_mode'</span>] = <span class="hljs-string">'peer'</span></span><br></pre></td></tr></table></figure><blockquote><p>​:warning: ‘smtp_password’字段不应包含任何 Ruby或者YAML语法中的分隔符 (如<code>&#39;</code>),以避免处理配置文件的过程中发生不必要的意外。</p></blockquote><h4 id="GitLab-日常维护"><a href="#GitLab-日常维护" class="headerlink" title="GitLab 日常维护"></a>GitLab 日常维护</h4><h5 id="1-查看服务状态"><a href="#1-查看服务状态" class="headerlink" title="1. 查看服务状态"></a>1. 查看服务状态</h5><p>使用 gitlab-ctl status 查看服务状态</p><figure class="highlight dockerfile hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@<span class="hljs-number">6</span> ~]<span class="hljs-comment"># sudo gitlab-ctl status</span></span><br><span class="line"><span class="hljs-keyword">run</span><span class="hljs-bash">: gitaly: (pid 15055) 23089s; run: <span class="hljs-built_in">log</span>: (pid 3142) 55379s</span></span><br><span class="line"><span class="hljs-bash">run: gitlab-monitor: (pid 15060) 23088s; run: <span class="hljs-built_in">log</span>: (pid 3325) 55357s</span></span><br><span class="line"><span class="hljs-bash">run: gitlab-workhorse: (pid 15063) 23088s; run: <span class="hljs-built_in">log</span>: (pid 3156) 55377s</span></span><br><span class="line"><span class="hljs-bash">run: logrotate: (pid 17867) 1487s; run: <span class="hljs-built_in">log</span>: (pid 3197) 55369s</span></span><br><span class="line"><span class="hljs-bash">run: nginx: (pid 15077) 23087s; run: <span class="hljs-built_in">log</span>: (pid 3169) 55375s</span></span><br><span class="line"><span class="hljs-bash">run: node-exporter: (pid 15083) 23087s; run: <span class="hljs-built_in">log</span>: (pid 3247) 55366s</span></span><br><span class="line"><span class="hljs-bash">run: postgres-exporter: (pid 15088) 23086s; run: <span class="hljs-built_in">log</span>: (pid 3311) 55358s</span></span><br><span class="line"><span class="hljs-bash">run: postgresql: (pid 15093) 23086s; run: <span class="hljs-built_in">log</span>: (pid 2988) 55412s</span></span><br><span class="line"><span class="hljs-bash">run: prometheus: (pid 15101) 23085s; run: <span class="hljs-built_in">log</span>: (pid 3230) 55368s</span></span><br><span class="line"><span class="hljs-bash">run: redis: (pid 15109) 23085s; run: <span class="hljs-built_in">log</span>: (pid 2931) 55419s</span></span><br><span class="line"><span class="hljs-bash">run: redis-exporter: (pid 15113) 23085s; run: <span class="hljs-built_in">log</span>: (pid 3290) 55364s</span></span><br><span class="line"><span class="hljs-bash">run: sidekiq: (pid 17029) 22450s; run: <span class="hljs-built_in">log</span>: (pid 3131) 55380s</span></span><br><span class="line"><span class="hljs-bash">run: unicorn: (pid 17001) 22460s; run: <span class="hljs-built_in">log</span>: (pid 3100) 55386s</span></span><br></pre></td></tr></table></figure><h5 id="2-启动、关闭、重启"><a href="#2-启动、关闭、重启" class="headerlink" title="2. 启动、关闭、重启"></a>2. 启动、关闭、重启</h5><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> 启动Gitlab所有组件</span></span><br><span class="line">sudo gitlab-ctl start</span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> 停止Gitlab所有组件</span></span><br><span class="line">sudo gitlab-ctl stop</span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> 重启Gitlab所有组件</span></span><br><span class="line">sudo gitlab-ctl restart</span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> 重启单个组件</span></span><br><span class="line">sudo gitlab-ctl restart sidekiq</span><br></pre></td></tr></table></figure><h5 id="3-控制台实时查看日志"><a href="#3-控制台实时查看日志" class="headerlink" title="3. 控制台实时查看日志"></a>3. 控制台实时查看日志</h5><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> 查看所有的logs; 按 Ctrl-C 退出</span></span><br><span class="line">sudo gitlab-ctl tail</span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> 拉取/var/<span class="hljs-built_in">log</span>/gitlab下子目录的日志</span></span><br><span class="line">sudo gitlab-ctl tail gitlab-rails</span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> 拉取某个指定的日志文件</span></span><br><span class="line">sudo gitlab-ctl tail nginx/gitlab_error.log</span><br></pre></td></tr></table></figure><h3 id="GitLab-安装后优化"><a href="#GitLab-安装后优化" class="headerlink" title="GitLab 安装后优化"></a><strong>GitLab 安装后优化</strong></h3><h4 id="启用HTTPS"><a href="#启用HTTPS" class="headerlink" title="启用HTTPS"></a>启用HTTPS</h4><p>首先，你需要提供一个有可信任CA证书，默认情况下GitLab是没有启用HTTPS的，如果要启用HTTPS时，首先要修改<code>/etc/gitlab/gitlab.rb</code>中的<code>external_url</code>:</p><figure class="highlight vala hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta"># 修改为https</span></span><br><span class="line">external_url <span class="hljs-string">"https://git.ultraera.org"</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-meta"># 设置默认将http重定向到https</span></span><br><span class="line">nginx[<span class="hljs-string">'redirect_http_to_https'</span>] = <span class="hljs-literal">true</span></span><br></pre></td></tr></table></figure><p>如果你暂时没有https证书，那么你可以临时自己颁发一个证书，注意这个证书是不受信任的。</p><figure class="highlight stylus hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir -<span class="hljs-selector-tag">p</span> /etc/nginx/ssl/</span><br><span class="line">cd /etc/nginx/ssl/</span><br><span class="line">sudo openssl req -newkey rsa:<span class="hljs-number">2048</span> -x509 -nodes -days <span class="hljs-number">3560</span> -out gitlab<span class="hljs-selector-class">.crt</span> -keyout gitlab.key</span><br><span class="line">sudo chmod o-r gitlab.key</span><br><span class="line">sudo mv gitlab<span class="hljs-selector-class">.key</span> gitlab<span class="hljs-selector-class">.crt</span> /etc/ssl/</span><br></pre></td></tr></table></figure><p>另外，还需要在gitlab-shell中的config.yml中将self_signed_cert 修改为启用:</p><figure class="highlight ini hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attr">self_signed_cert</span> = <span class="hljs-literal">true</span></span><br></pre></td></tr></table></figure><h4 id="设置延迟启动"><a href="#设置延迟启动" class="headerlink" title="设置延迟启动"></a>设置延迟启动</h4><p>为保证服务质量，我们可以设置让omnibus-gitlab的服务(Nginx, Redis, Unicorn等) 在指定的文件系统挂载成功后再启动，在<code>/etc/gitlab/gitlab.rb</code> 文件中添加如下内容：</p><figure class="highlight vala hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta"># 等待/var/opt/gitlab 先被挂载</span></span><br><span class="line">high_availability[<span class="hljs-string">'mountpoint'</span>] = <span class="hljs-string">'/var/opt/gitlab'</span></span><br></pre></td></tr></table></figure><blockquote><p>注意在修改配置之后，要使用重新reconfigure配置</p></blockquote><h4 id="Backups-备份还原"><a href="#Backups-备份还原" class="headerlink" title="Backups 备份还原"></a>Backups 备份还原</h4><h5 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h5><p>Gitlab的配置也非常简单,使用一条命令即可创建完整的Gitlab备份:</p><figure class="highlight css hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-tag">gitlab-rake</span> <span class="hljs-selector-tag">gitlab</span><span class="hljs-selector-pseudo">:backup</span><span class="hljs-selector-pseudo">:create</span></span><br></pre></td></tr></table></figure><p>该命令会在<code>/var/opt/gitlab/backups</code>目录下创建一个名称类似为<code>1491989249_2017_04_12_gitlab_backup.tar</code>的压缩包, 这个压缩包就是Gitlab整个的完整部分，其中开头的<code>1491989249_2017_04_12</code>是备份创建的日期，这也是我们等下恢复是要用的字段。</p><h5 id="修改默认备份路径"><a href="#修改默认备份路径" class="headerlink" title="修改默认备份路径"></a>修改默认备份路径</h5><p>如果你像我一样，是使用yum安装的，那么GitLab默认的备份目录应该在<code>/var/opt/gitlab/backups</code>，我建议将备份目录修改为其他位置，并添加定时自动备份脚本，可以通过修改<code>/etc/gitlab/gitlab.rb</code>来修改默认位置：</p><figure class="highlight prolog hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitlab_rails[<span class="hljs-string">'backup_path'</span>] = <span class="hljs-string">'/mnt/backups'</span></span><br></pre></td></tr></table></figure><h5 id="使用crontab-添加自动备份"><a href="#使用crontab-添加自动备份" class="headerlink" title="使用crontab 添加自动备份"></a>使用crontab 添加自动备份</h5><figure class="highlight awk hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 每天凌晨00:00 自动备份</span></span><br><span class="line"><span class="hljs-number">00</span> <span class="hljs-number">00</span> * * * <span class="hljs-regexp">/opt/gi</span>tlab<span class="hljs-regexp">/bin/gi</span>tlab-rake gitlab:backup:create</span><br></pre></td></tr></table></figure><h5 id="备份恢复"><a href="#备份恢复" class="headerlink" title="备份恢复"></a>备份恢复</h5><figure class="highlight crmsh hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 停止相关数据连接服务</span></span><br><span class="line">gitlab-ctl <span class="hljs-literal">stop</span> unicorn</span><br><span class="line">gitlab-ctl <span class="hljs-literal">stop</span> sidekiq</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 从1491989249_2017_04_12编号备份中恢复</span></span><br><span class="line">gitlab-rake gitlab:backup:restore <span class="hljs-attr">BACKUP=</span><span class="hljs-number">1491989249</span>_2017_04_12</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 启动Gitlab</span></span><br><span class="line">sudo gitlab-ctl <span class="hljs-literal">start</span> unicorn</span><br><span class="line">sudo gitlab-ctl <span class="hljs-literal">start</span> sidekiq</span><br></pre></td></tr></table></figure><h3 id="GitLab-迁移"><a href="#GitLab-迁移" class="headerlink" title="GitLab 迁移"></a><strong>GitLab 迁移</strong></h3><p>只需将原服务器<code>/var/opt/gitlab/backups</code>目录下的备份文件拷贝到新服务器上的<code>/var/opt/gitlab/backups</code>上即可(如果你没修改过默认备份目录的话)， 但是需要注意的是新服务器上的Gitlab的版本必须与创建备份时的Gitlab版本号相同， 比如新服务器安装的是最新的9.0.5版本的Gitlab, 那么迁移之前，最好将老服务器的Gitlab 升级为9.0.5在进行备份。</p><p>/Users/Alex/Documents/Hexo/source/_posts/</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;目前最为主流的在线Git版本控制系统可以说是非GitHub莫属，对于个人开发者和开源项目可以直接选择GitHub作为Git版本控制系统即可，但是，对于企业内部开发管理的Git版本控制系统，在对保密性有高要求时GitHub就不合适了，这时GitLab作为一个可以完全搭建在企业
      
    
    </summary>
    
      <category term="Git" scheme="https://samzong.me/categories/Git/"/>
    
    
      <category term="Gitlab" scheme="https://samzong.me/tags/Gitlab/"/>
    
  </entry>
  
</feed>
